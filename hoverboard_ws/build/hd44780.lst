ARM GAS  /tmp/ccXPekIA.s 			page 1


   1              		.cpu cortex-m3
   2              		.eabi_attribute 20, 1
   3              		.eabi_attribute 21, 1
   4              		.eabi_attribute 23, 3
   5              		.eabi_attribute 24, 1
   6              		.eabi_attribute 25, 1
   7              		.eabi_attribute 26, 1
   8              		.eabi_attribute 30, 1
   9              		.eabi_attribute 34, 1
  10              		.eabi_attribute 18, 4
  11              		.file	"hd44780.c"
  12              		.text
  13              	.Ltext0:
  14              		.cfi_sections	.debug_frame
  15              		.section	.text.LCD_I2C_WriteOut,"ax",%progbits
  16              		.align	1
  17              		.global	LCD_I2C_WriteOut
  18              		.syntax unified
  19              		.thumb
  20              		.thumb_func
  21              		.fpu softvfp
  23              	LCD_I2C_WriteOut:
  24              	.LFB65:
  25              		.file 1 "Src/hd44780.c"
   1:Src/hd44780.c **** /*
   2:Src/hd44780.c ****  *  * hd44780.c
   3:Src/hd44780.c ****  *
   4:Src/hd44780.c ****  *  Created on: Feb 20, 2014
   5:Src/hd44780.c ****  *      Author: Peter
   6:Src/hd44780.c ****  */
   7:Src/hd44780.c **** 
   8:Src/hd44780.c **** #include "hd44780.h"
   9:Src/hd44780.c **** 
  10:Src/hd44780.c **** uint32_t PCF8574_Type0Pins[8] = { 4, 5, 6, 7, 0, 1, 2, 3 };
  11:Src/hd44780.c **** uint8_t LCDerrorFlag = 0;
  12:Src/hd44780.c **** 
  13:Src/hd44780.c **** void LCD_WaitForBusyFlag(LCD_PCF8574_HandleTypeDef* handle) {
  14:Src/hd44780.c **** 	uint8_t flag;
  15:Src/hd44780.c **** 	LCD_GetBusyFlag(handle, &flag);
  16:Src/hd44780.c **** 	//uint32_t startTick=HAL_GetTick();
  17:Src/hd44780.c **** 	//while (flag == 1 && HAL_GetTick()-startTick<handle->pcf8574.PCF_I2C_TIMEOUT) {
  18:Src/hd44780.c **** 	//	LCD_GetBusyFlag(handle, &flag);
  19:Src/hd44780.c **** 	//}
  20:Src/hd44780.c **** 	return;
  21:Src/hd44780.c **** }
  22:Src/hd44780.c **** 
  23:Src/hd44780.c **** LCD_RESULT LCD_I2C_WriteOut(LCD_PCF8574_HandleTypeDef* handle) {
  26              		.loc 1 23 0
  27              		.cfi_startproc
  28              		@ args = 0, pretend = 0, frame = 0
  29              		@ frame_needed = 0, uses_anonymous_args = 0
  30              	.LVL0:
  31 0000 08B5     		push	{r3, lr}
  32              	.LCFI0:
  33              		.cfi_def_cfa_offset 8
  34              		.cfi_offset 3, -8
  35              		.cfi_offset 14, -4
ARM GAS  /tmp/ccXPekIA.s 			page 2


  24:Src/hd44780.c **** 	if (!LCDerrorFlag) {
  36              		.loc 1 24 0
  37 0002 084B     		ldr	r3, .L7
  38 0004 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
  39 0006 0BB1     		cbz	r3, .L6
  25:Src/hd44780.c **** 		if (PCF8574_Write(&handle->pcf8574, handle->state) != PCF8574_OK) {
  26:Src/hd44780.c **** 			//handle->errorCallback(LCD_ERROR);
  27:Src/hd44780.c **** 			LCDerrorFlag = 1;
  28:Src/hd44780.c **** 			return LCD_ERROR;
  29:Src/hd44780.c **** 		}
  30:Src/hd44780.c **** 		return LCD_OK;
  31:Src/hd44780.c **** 	}
  32:Src/hd44780.c **** 	return LCD_ERROR;
  40              		.loc 1 32 0
  41 0008 0120     		movs	r0, #1
  42              	.LVL1:
  43 000a 08BD     		pop	{r3, pc}
  44              	.LVL2:
  45              	.L6:
  25:Src/hd44780.c **** 		if (PCF8574_Write(&handle->pcf8574, handle->state) != PCF8574_OK) {
  46              		.loc 1 25 0
  47 000c 90F83410 		ldrb	r1, [r0, #52]	@ zero_extendqisi2
  48 0010 4030     		adds	r0, r0, #64
  49              	.LVL3:
  50 0012 FFF7FEFF 		bl	PCF8574_Write
  51              	.LVL4:
  52 0016 18B1     		cbz	r0, .L4
  27:Src/hd44780.c **** 			return LCD_ERROR;
  53              		.loc 1 27 0
  54 0018 0120     		movs	r0, #1
  55 001a 024B     		ldr	r3, .L7
  56 001c 1870     		strb	r0, [r3]
  28:Src/hd44780.c **** 		}
  57              		.loc 1 28 0
  58 001e 08BD     		pop	{r3, pc}
  59              	.L4:
  30:Src/hd44780.c **** 	}
  60              		.loc 1 30 0
  61 0020 0020     		movs	r0, #0
  33:Src/hd44780.c **** }
  62              		.loc 1 33 0
  63 0022 08BD     		pop	{r3, pc}
  64              	.L8:
  65              		.align	2
  66              	.L7:
  67 0024 00000000 		.word	.LANCHOR0
  68              		.cfi_endproc
  69              	.LFE65:
  71              		.section	.text.LCD_StateWriteBit,"ax",%progbits
  72              		.align	1
  73              		.global	LCD_StateWriteBit
  74              		.syntax unified
  75              		.thumb
  76              		.thumb_func
  77              		.fpu softvfp
  79              	LCD_StateWriteBit:
  80              	.LFB67:
ARM GAS  /tmp/ccXPekIA.s 			page 3


  34:Src/hd44780.c **** 
  35:Src/hd44780.c **** LCD_RESULT LCD_StateLEDControl(LCD_PCF8574_HandleTypeDef* handle, uint8_t on) {
  36:Src/hd44780.c **** 	return LCD_StateWriteBit(handle, on & 1, LCD_PIN_LED);
  37:Src/hd44780.c **** }
  38:Src/hd44780.c **** 
  39:Src/hd44780.c **** LCD_RESULT LCD_StateWriteBit(LCD_PCF8574_HandleTypeDef* handle, uint8_t value,
  40:Src/hd44780.c **** 		LCD_PIN pin) {
  81              		.loc 1 40 0
  82              		.cfi_startproc
  83              		@ args = 0, pretend = 0, frame = 0
  84              		@ frame_needed = 0, uses_anonymous_args = 0
  85              	.LVL5:
  86 0000 08B5     		push	{r3, lr}
  87              	.LCFI1:
  88              		.cfi_def_cfa_offset 8
  89              		.cfi_offset 3, -8
  90              		.cfi_offset 14, -4
  41:Src/hd44780.c **** 
  42:Src/hd44780.c **** 	if (value) {
  91              		.loc 1 42 0
  92 0002 71B9     		cbnz	r1, .L13
  43:Src/hd44780.c **** 		handle->state |= 1 << handle->pins[pin];
  44:Src/hd44780.c **** 	} else {
  45:Src/hd44780.c **** 		handle->state &= ~(1 << handle->pins[pin]);
  93              		.loc 1 45 0
  94 0004 836B     		ldr	r3, [r0, #56]
  95 0006 53F82220 		ldr	r2, [r3, r2, lsl #2]
  96              	.LVL6:
  97 000a 0123     		movs	r3, #1
  98 000c 03FA02F2 		lsl	r2, r3, r2
  99 0010 90F83430 		ldrb	r3, [r0, #52]	@ zero_extendqisi2
 100 0014 23EA0203 		bic	r3, r3, r2
 101 0018 80F83430 		strb	r3, [r0, #52]
 102              	.L11:
  46:Src/hd44780.c **** 	}
  47:Src/hd44780.c **** 	return LCD_I2C_WriteOut(handle);
 103              		.loc 1 47 0
 104 001c FFF7FEFF 		bl	LCD_I2C_WriteOut
 105              	.LVL7:
  48:Src/hd44780.c **** }
 106              		.loc 1 48 0
 107 0020 08BD     		pop	{r3, pc}
 108              	.LVL8:
 109              	.L13:
  43:Src/hd44780.c **** 		handle->state |= 1 << handle->pins[pin];
 110              		.loc 1 43 0
 111 0022 836B     		ldr	r3, [r0, #56]
 112 0024 53F82220 		ldr	r2, [r3, r2, lsl #2]
 113              	.LVL9:
 114 0028 0123     		movs	r3, #1
 115 002a 03FA02F2 		lsl	r2, r3, r2
 116 002e 90F83430 		ldrb	r3, [r0, #52]	@ zero_extendqisi2
 117 0032 1343     		orrs	r3, r3, r2
 118 0034 80F83430 		strb	r3, [r0, #52]
 119 0038 F0E7     		b	.L11
 120              		.cfi_endproc
 121              	.LFE67:
ARM GAS  /tmp/ccXPekIA.s 			page 4


 123              		.section	.text.LCD_StateLEDControl,"ax",%progbits
 124              		.align	1
 125              		.global	LCD_StateLEDControl
 126              		.syntax unified
 127              		.thumb
 128              		.thumb_func
 129              		.fpu softvfp
 131              	LCD_StateLEDControl:
 132              	.LFB66:
  35:Src/hd44780.c **** 	return LCD_StateWriteBit(handle, on & 1, LCD_PIN_LED);
 133              		.loc 1 35 0
 134              		.cfi_startproc
 135              		@ args = 0, pretend = 0, frame = 0
 136              		@ frame_needed = 0, uses_anonymous_args = 0
 137              	.LVL10:
 138 0000 08B5     		push	{r3, lr}
 139              	.LCFI2:
 140              		.cfi_def_cfa_offset 8
 141              		.cfi_offset 3, -8
 142              		.cfi_offset 14, -4
  36:Src/hd44780.c **** }
 143              		.loc 1 36 0
 144 0002 0722     		movs	r2, #7
 145 0004 01F00101 		and	r1, r1, #1
 146              	.LVL11:
 147 0008 FFF7FEFF 		bl	LCD_StateWriteBit
 148              	.LVL12:
  37:Src/hd44780.c **** 
 149              		.loc 1 37 0
 150 000c 08BD     		pop	{r3, pc}
 151              		.cfi_endproc
 152              	.LFE66:
 154              		.section	.text.LCD_WriteToDataBus,"ax",%progbits
 155              		.align	1
 156              		.global	LCD_WriteToDataBus
 157              		.syntax unified
 158              		.thumb
 159              		.thumb_func
 160              		.fpu softvfp
 162              	LCD_WriteToDataBus:
 163              	.LFB69:
  49:Src/hd44780.c **** 
  50:Src/hd44780.c **** LCD_RESULT LCD_Init(LCD_PCF8574_HandleTypeDef* handle) {
  51:Src/hd44780.c **** 	handle->D = 1;
  52:Src/hd44780.c **** 	handle->B = 0;
  53:Src/hd44780.c **** 	handle->C = 0;
  54:Src/hd44780.c **** 	if (handle->type == TYPE0) {
  55:Src/hd44780.c **** 		handle->pins = PCF8574_Type0Pins;
  56:Src/hd44780.c **** 	} else {
  57:Src/hd44780.c **** 		//handle->errorCallback(LCD_ERROR);
  58:Src/hd44780.c **** 		return LCD_ERROR;	// no type of subinterface was specified
  59:Src/hd44780.c **** 	}
  60:Src/hd44780.c **** 	if (PCF8574_Init(&handle->pcf8574) != PCF8574_OK) {
  61:Src/hd44780.c **** 		//handle->errorCallback(LCD_ERROR);
  62:Src/hd44780.c **** 		return LCD_ERROR;
  63:Src/hd44780.c **** 	}
  64:Src/hd44780.c **** 
ARM GAS  /tmp/ccXPekIA.s 			page 5


  65:Src/hd44780.c **** 	//HAL_Delay(50);
  66:Src/hd44780.c **** 	LCD_StateWriteBit(handle, 0, LCD_PIN_RS);
  67:Src/hd44780.c **** 	LCD_StateWriteBit(handle, 0, LCD_PIN_RW);
  68:Src/hd44780.c **** 	LCD_StateWriteBit(handle, 0, LCD_PIN_E);
  69:Src/hd44780.c **** 
  70:Src/hd44780.c **** 	LCD_WriteToDataBus(handle, 3);
  71:Src/hd44780.c **** 
  72:Src/hd44780.c **** 	LCD_StateWriteBit(handle, 1, LCD_PIN_E);
  73:Src/hd44780.c **** 	HAL_Delay(1);
  74:Src/hd44780.c **** 	LCD_StateWriteBit(handle, 0, LCD_PIN_E);
  75:Src/hd44780.c **** 	HAL_Delay(5);
  76:Src/hd44780.c **** 
  77:Src/hd44780.c **** 	LCD_WriteToDataBus(handle, 3);
  78:Src/hd44780.c **** 
  79:Src/hd44780.c **** 	LCD_StateWriteBit(handle, 1, LCD_PIN_E);
  80:Src/hd44780.c **** 	HAL_Delay(1);
  81:Src/hd44780.c **** 	LCD_StateWriteBit(handle, 0, LCD_PIN_E);
  82:Src/hd44780.c **** 	HAL_Delay(1);
  83:Src/hd44780.c **** 
  84:Src/hd44780.c **** 	LCD_WriteToDataBus(handle, 3);
  85:Src/hd44780.c **** 
  86:Src/hd44780.c **** 	LCD_StateWriteBit(handle, 1, LCD_PIN_E);
  87:Src/hd44780.c **** 	HAL_Delay(1);
  88:Src/hd44780.c **** 	LCD_StateWriteBit(handle, 0, LCD_PIN_E);
  89:Src/hd44780.c **** 	HAL_Delay(1);
  90:Src/hd44780.c **** 
  91:Src/hd44780.c **** 	LCD_WriteToDataBus(handle, 2);
  92:Src/hd44780.c **** 
  93:Src/hd44780.c **** 	LCD_StateWriteBit(handle, 1, LCD_PIN_E);
  94:Src/hd44780.c **** 	HAL_Delay(1);
  95:Src/hd44780.c **** 	LCD_StateWriteBit(handle, 0, LCD_PIN_E);
  96:Src/hd44780.c **** 	HAL_Delay(1);
  97:Src/hd44780.c **** 
  98:Src/hd44780.c **** 	uint8_t cmd = 0;
  99:Src/hd44780.c **** 	cmd = cmd | (handle->NUMBER_OF_LINES << 3);
 100:Src/hd44780.c **** 	cmd = cmd | (1 << 5);
 101:Src/hd44780.c **** 
 102:Src/hd44780.c **** 	LCD_WriteCMD(handle, cmd);	// setting interface
 103:Src/hd44780.c **** 
 104:Src/hd44780.c **** 	cmd = 0;
 105:Src/hd44780.c **** 	cmd = cmd | (1 << 3);
 106:Src/hd44780.c **** 	cmd = cmd | (handle->C << 1);
 107:Src/hd44780.c **** 	cmd = cmd | handle->B;
 108:Src/hd44780.c **** 
 109:Src/hd44780.c **** 	LCD_WriteCMD(handle, cmd);	// setting display/cursor
 110:Src/hd44780.c **** 
 111:Src/hd44780.c **** 	LCD_ClearDisplay(handle);
 112:Src/hd44780.c **** 
 113:Src/hd44780.c **** 	LCD_EntryModeSet(handle, DIRECTION_INCREMENT, SHIFT_NO);
 114:Src/hd44780.c **** 
 115:Src/hd44780.c **** 	LCD_DisplayON(handle);
 116:Src/hd44780.c **** 
 117:Src/hd44780.c **** 	LCD_StateLEDControl(handle, 1);	// LED power on
 118:Src/hd44780.c **** 
 119:Src/hd44780.c **** 	return LCD_OK;
 120:Src/hd44780.c **** 
 121:Src/hd44780.c **** }
ARM GAS  /tmp/ccXPekIA.s 			page 6


 122:Src/hd44780.c **** 
 123:Src/hd44780.c **** LCD_RESULT LCD_WriteToDataBus(LCD_PCF8574_HandleTypeDef* handle, uint8_t data) {
 164              		.loc 1 123 0
 165              		.cfi_startproc
 166              		@ args = 0, pretend = 0, frame = 0
 167              		@ frame_needed = 0, uses_anonymous_args = 0
 168              	.LVL13:
 169 0000 08B5     		push	{r3, lr}
 170              	.LCFI3:
 171              		.cfi_def_cfa_offset 8
 172              		.cfi_offset 3, -8
 173              		.cfi_offset 14, -4
 124:Src/hd44780.c **** 	if ((data & 1) == 1) {
 174              		.loc 1 124 0
 175 0002 11F0010F 		tst	r1, #1
 176 0006 34D0     		beq	.L17
 125:Src/hd44780.c **** 		handle->state |= 1 << handle->pins[LCD_PIN_D4];
 177              		.loc 1 125 0
 178 0008 836B     		ldr	r3, [r0, #56]
 179 000a 1A68     		ldr	r2, [r3]
 180 000c 0123     		movs	r3, #1
 181 000e 03FA02F2 		lsl	r2, r3, r2
 182 0012 90F83430 		ldrb	r3, [r0, #52]	@ zero_extendqisi2
 183 0016 1343     		orrs	r3, r3, r2
 184 0018 80F83430 		strb	r3, [r0, #52]
 185              	.L18:
 126:Src/hd44780.c **** 	} else {
 127:Src/hd44780.c **** 		handle->state &= ~(1 << handle->pins[LCD_PIN_D4]);
 128:Src/hd44780.c **** 	}
 129:Src/hd44780.c **** 
 130:Src/hd44780.c **** 	if ((data & 2) == 2) {
 186              		.loc 1 130 0
 187 001c 11F0020F 		tst	r1, #2
 188 0020 33D0     		beq	.L19
 131:Src/hd44780.c **** 		handle->state |= 1 << handle->pins[LCD_PIN_D5];
 189              		.loc 1 131 0
 190 0022 836B     		ldr	r3, [r0, #56]
 191 0024 5A68     		ldr	r2, [r3, #4]
 192 0026 0123     		movs	r3, #1
 193 0028 03FA02F2 		lsl	r2, r3, r2
 194 002c 90F83430 		ldrb	r3, [r0, #52]	@ zero_extendqisi2
 195 0030 1343     		orrs	r3, r3, r2
 196 0032 80F83430 		strb	r3, [r0, #52]
 197              	.L20:
 132:Src/hd44780.c **** 	} else {
 133:Src/hd44780.c **** 		handle->state &= ~(1 << handle->pins[LCD_PIN_D5]);
 134:Src/hd44780.c **** 	}
 135:Src/hd44780.c **** 
 136:Src/hd44780.c **** 	if ((data & 4) == 4) {
 198              		.loc 1 136 0
 199 0036 11F0040F 		tst	r1, #4
 200 003a 32D0     		beq	.L21
 137:Src/hd44780.c **** 		handle->state |= 1 << handle->pins[LCD_PIN_D6];
 201              		.loc 1 137 0
 202 003c 836B     		ldr	r3, [r0, #56]
 203 003e 9A68     		ldr	r2, [r3, #8]
 204 0040 0123     		movs	r3, #1
ARM GAS  /tmp/ccXPekIA.s 			page 7


 205 0042 03FA02F2 		lsl	r2, r3, r2
 206 0046 90F83430 		ldrb	r3, [r0, #52]	@ zero_extendqisi2
 207 004a 1343     		orrs	r3, r3, r2
 208 004c 80F83430 		strb	r3, [r0, #52]
 209              	.L22:
 138:Src/hd44780.c **** 	} else {
 139:Src/hd44780.c **** 		handle->state &= ~(1 << handle->pins[LCD_PIN_D6]);
 140:Src/hd44780.c **** 	}
 141:Src/hd44780.c **** 
 142:Src/hd44780.c **** 	if ((data & 8) == 8) {
 210              		.loc 1 142 0
 211 0050 11F0080F 		tst	r1, #8
 212 0054 31D1     		bne	.L26
 143:Src/hd44780.c **** 		handle->state |= 1 << handle->pins[LCD_PIN_D7];
 144:Src/hd44780.c **** 	} else {
 145:Src/hd44780.c **** 		handle->state &= ~(1 << handle->pins[LCD_PIN_D7]);
 213              		.loc 1 145 0
 214 0056 836B     		ldr	r3, [r0, #56]
 215 0058 DA68     		ldr	r2, [r3, #12]
 216 005a 0123     		movs	r3, #1
 217 005c 03FA02F2 		lsl	r2, r3, r2
 218 0060 90F83430 		ldrb	r3, [r0, #52]	@ zero_extendqisi2
 219 0064 23EA0203 		bic	r3, r3, r2
 220 0068 80F83430 		strb	r3, [r0, #52]
 221              	.L24:
 146:Src/hd44780.c **** 	}
 147:Src/hd44780.c **** 
 148:Src/hd44780.c **** 	return LCD_I2C_WriteOut(handle);
 222              		.loc 1 148 0
 223 006c FFF7FEFF 		bl	LCD_I2C_WriteOut
 224              	.LVL14:
 149:Src/hd44780.c **** }
 225              		.loc 1 149 0
 226 0070 08BD     		pop	{r3, pc}
 227              	.LVL15:
 228              	.L17:
 127:Src/hd44780.c **** 	}
 229              		.loc 1 127 0
 230 0072 836B     		ldr	r3, [r0, #56]
 231 0074 1A68     		ldr	r2, [r3]
 232 0076 0123     		movs	r3, #1
 233 0078 03FA02F2 		lsl	r2, r3, r2
 234 007c 90F83430 		ldrb	r3, [r0, #52]	@ zero_extendqisi2
 235 0080 23EA0203 		bic	r3, r3, r2
 236 0084 80F83430 		strb	r3, [r0, #52]
 237 0088 C8E7     		b	.L18
 238              	.L19:
 133:Src/hd44780.c **** 	}
 239              		.loc 1 133 0
 240 008a 836B     		ldr	r3, [r0, #56]
 241 008c 5A68     		ldr	r2, [r3, #4]
 242 008e 0123     		movs	r3, #1
 243 0090 03FA02F2 		lsl	r2, r3, r2
 244 0094 90F83430 		ldrb	r3, [r0, #52]	@ zero_extendqisi2
 245 0098 23EA0203 		bic	r3, r3, r2
 246 009c 80F83430 		strb	r3, [r0, #52]
 247 00a0 C9E7     		b	.L20
ARM GAS  /tmp/ccXPekIA.s 			page 8


 248              	.L21:
 139:Src/hd44780.c **** 	}
 249              		.loc 1 139 0
 250 00a2 836B     		ldr	r3, [r0, #56]
 251 00a4 9A68     		ldr	r2, [r3, #8]
 252 00a6 0123     		movs	r3, #1
 253 00a8 03FA02F2 		lsl	r2, r3, r2
 254 00ac 90F83430 		ldrb	r3, [r0, #52]	@ zero_extendqisi2
 255 00b0 23EA0203 		bic	r3, r3, r2
 256 00b4 80F83430 		strb	r3, [r0, #52]
 257 00b8 CAE7     		b	.L22
 258              	.L26:
 143:Src/hd44780.c **** 	} else {
 259              		.loc 1 143 0
 260 00ba 836B     		ldr	r3, [r0, #56]
 261 00bc DA68     		ldr	r2, [r3, #12]
 262 00be 0123     		movs	r3, #1
 263 00c0 03FA02F2 		lsl	r2, r3, r2
 264 00c4 90F83430 		ldrb	r3, [r0, #52]	@ zero_extendqisi2
 265 00c8 1343     		orrs	r3, r3, r2
 266 00ca 80F83430 		strb	r3, [r0, #52]
 267 00ce CDE7     		b	.L24
 268              		.cfi_endproc
 269              	.LFE69:
 271              		.section	.text.LCD_GetBusyFlag,"ax",%progbits
 272              		.align	1
 273              		.global	LCD_GetBusyFlag
 274              		.syntax unified
 275              		.thumb
 276              		.thumb_func
 277              		.fpu softvfp
 279              	LCD_GetBusyFlag:
 280              	.LFB70:
 150:Src/hd44780.c **** 
 151:Src/hd44780.c **** LCD_RESULT LCD_GetBusyFlag(LCD_PCF8574_HandleTypeDef* handle, uint8_t* flag) {
 281              		.loc 1 151 0
 282              		.cfi_startproc
 283              		@ args = 0, pretend = 0, frame = 0
 284              		@ frame_needed = 0, uses_anonymous_args = 0
 285              	.LVL16:
 286 0000 10B5     		push	{r4, lr}
 287              	.LCFI4:
 288              		.cfi_def_cfa_offset 8
 289              		.cfi_offset 4, -8
 290              		.cfi_offset 14, -4
 291 0002 0446     		mov	r4, r0
 152:Src/hd44780.c **** 
 153:Src/hd44780.c **** 	LCD_StateWriteBit(handle, 0, LCD_PIN_E);
 292              		.loc 1 153 0
 293 0004 0622     		movs	r2, #6
 294 0006 0021     		movs	r1, #0
 295              	.LVL17:
 296 0008 FFF7FEFF 		bl	LCD_StateWriteBit
 297              	.LVL18:
 154:Src/hd44780.c **** 	LCD_StateWriteBit(handle, 0, LCD_PIN_RS);
 298              		.loc 1 154 0
 299 000c 0422     		movs	r2, #4
ARM GAS  /tmp/ccXPekIA.s 			page 9


 300 000e 0021     		movs	r1, #0
 301 0010 2046     		mov	r0, r4
 302 0012 FFF7FEFF 		bl	LCD_StateWriteBit
 303              	.LVL19:
 155:Src/hd44780.c **** 	LCD_StateWriteBit(handle, 1, LCD_PIN_RW);
 304              		.loc 1 155 0
 305 0016 0522     		movs	r2, #5
 306 0018 0121     		movs	r1, #1
 307 001a 2046     		mov	r0, r4
 308 001c FFF7FEFF 		bl	LCD_StateWriteBit
 309              	.LVL20:
 156:Src/hd44780.c **** 
 157:Src/hd44780.c **** 	LCD_StateWriteBit(handle, 1, LCD_PIN_E);
 310              		.loc 1 157 0
 311 0020 0622     		movs	r2, #6
 312 0022 0121     		movs	r1, #1
 313 0024 2046     		mov	r0, r4
 314 0026 FFF7FEFF 		bl	LCD_StateWriteBit
 315              	.LVL21:
 158:Src/hd44780.c **** 
 159:Src/hd44780.c **** 	//PCF8574_Read(&handle->pcf8574, flag);
 160:Src/hd44780.c **** 
 161:Src/hd44780.c **** 	//*flag &= 1 << handle->pins[LCD_PIN_D7];
 162:Src/hd44780.c **** 	//*flag >>= handle->pins[LCD_PIN_D7];
 163:Src/hd44780.c **** 
 164:Src/hd44780.c **** 	LCD_StateWriteBit(handle, 0, LCD_PIN_E);
 316              		.loc 1 164 0
 317 002a 0622     		movs	r2, #6
 318 002c 0021     		movs	r1, #0
 319 002e 2046     		mov	r0, r4
 320 0030 FFF7FEFF 		bl	LCD_StateWriteBit
 321              	.LVL22:
 165:Src/hd44780.c **** 
 166:Src/hd44780.c **** 	LCD_StateWriteBit(handle, 1, LCD_PIN_E);
 322              		.loc 1 166 0
 323 0034 0622     		movs	r2, #6
 324 0036 0121     		movs	r1, #1
 325 0038 2046     		mov	r0, r4
 326 003a FFF7FEFF 		bl	LCD_StateWriteBit
 327              	.LVL23:
 167:Src/hd44780.c **** 
 168:Src/hd44780.c **** 	//uint8_t flag2;
 169:Src/hd44780.c **** 	//PCF8574_Read(&handle->pcf8574, &flag2);
 170:Src/hd44780.c **** 
 171:Src/hd44780.c **** 	LCD_StateWriteBit(handle, 0, LCD_PIN_E);
 328              		.loc 1 171 0
 329 003e 0622     		movs	r2, #6
 330 0040 0021     		movs	r1, #0
 331 0042 2046     		mov	r0, r4
 332 0044 FFF7FEFF 		bl	LCD_StateWriteBit
 333              	.LVL24:
 172:Src/hd44780.c **** 	LCD_StateWriteBit(handle, 0, LCD_PIN_RW);
 334              		.loc 1 172 0
 335 0048 0522     		movs	r2, #5
 336 004a 0021     		movs	r1, #0
 337 004c 2046     		mov	r0, r4
 338 004e FFF7FEFF 		bl	LCD_StateWriteBit
ARM GAS  /tmp/ccXPekIA.s 			page 10


 339              	.LVL25:
 173:Src/hd44780.c **** 
 174:Src/hd44780.c **** 	return LCD_OK;
 175:Src/hd44780.c **** 
 176:Src/hd44780.c **** }
 340              		.loc 1 176 0
 341 0052 0020     		movs	r0, #0
 342 0054 10BD     		pop	{r4, pc}
 343              		.cfi_endproc
 344              	.LFE70:
 346              		.section	.text.LCD_WaitForBusyFlag,"ax",%progbits
 347              		.align	1
 348              		.global	LCD_WaitForBusyFlag
 349              		.syntax unified
 350              		.thumb
 351              		.thumb_func
 352              		.fpu softvfp
 354              	LCD_WaitForBusyFlag:
 355              	.LFB64:
  13:Src/hd44780.c **** 	uint8_t flag;
 356              		.loc 1 13 0
 357              		.cfi_startproc
 358              		@ args = 0, pretend = 0, frame = 8
 359              		@ frame_needed = 0, uses_anonymous_args = 0
 360              	.LVL26:
 361 0000 00B5     		push	{lr}
 362              	.LCFI5:
 363              		.cfi_def_cfa_offset 4
 364              		.cfi_offset 14, -4
 365 0002 83B0     		sub	sp, sp, #12
 366              	.LCFI6:
 367              		.cfi_def_cfa_offset 16
  15:Src/hd44780.c **** 	//uint32_t startTick=HAL_GetTick();
 368              		.loc 1 15 0
 369 0004 0DF10701 		add	r1, sp, #7
 370 0008 FFF7FEFF 		bl	LCD_GetBusyFlag
 371              	.LVL27:
  21:Src/hd44780.c **** 
 372              		.loc 1 21 0
 373 000c 03B0     		add	sp, sp, #12
 374              	.LCFI7:
 375              		.cfi_def_cfa_offset 4
 376              		@ sp needed
 377 000e 5DF804FB 		ldr	pc, [sp], #4
 378              		.cfi_endproc
 379              	.LFE64:
 381              		.section	.text.LCD_WriteCMD,"ax",%progbits
 382              		.align	1
 383              		.global	LCD_WriteCMD
 384              		.syntax unified
 385              		.thumb
 386              		.thumb_func
 387              		.fpu softvfp
 389              	LCD_WriteCMD:
 390              	.LFB71:
 177:Src/hd44780.c **** 
 178:Src/hd44780.c **** LCD_RESULT LCD_WriteCMD(LCD_PCF8574_HandleTypeDef* handle, uint8_t cmd) {
ARM GAS  /tmp/ccXPekIA.s 			page 11


 391              		.loc 1 178 0
 392              		.cfi_startproc
 393              		@ args = 0, pretend = 0, frame = 0
 394              		@ frame_needed = 0, uses_anonymous_args = 0
 395              	.LVL28:
 396 0000 38B5     		push	{r3, r4, r5, lr}
 397              	.LCFI8:
 398              		.cfi_def_cfa_offset 16
 399              		.cfi_offset 3, -16
 400              		.cfi_offset 4, -12
 401              		.cfi_offset 5, -8
 402              		.cfi_offset 14, -4
 179:Src/hd44780.c **** 	if (!LCDerrorFlag) {
 403              		.loc 1 179 0
 404 0002 184B     		ldr	r3, .L36
 405 0004 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 406 0006 0BB1     		cbz	r3, .L35
 180:Src/hd44780.c **** 		LCD_StateWriteBit(handle, 0, LCD_PIN_E);
 181:Src/hd44780.c **** 		LCD_StateWriteBit(handle, 0, LCD_PIN_RS);
 182:Src/hd44780.c **** 
 183:Src/hd44780.c **** 		LCD_WriteToDataBus(handle, cmd >> 4);
 184:Src/hd44780.c **** 		LCD_StateWriteBit(handle, 1, LCD_PIN_E);
 185:Src/hd44780.c **** 		LCD_StateWriteBit(handle, 0, LCD_PIN_E);
 186:Src/hd44780.c **** 
 187:Src/hd44780.c **** 		LCD_WriteToDataBus(handle, cmd);
 188:Src/hd44780.c **** 		LCD_StateWriteBit(handle, 1, LCD_PIN_E);
 189:Src/hd44780.c **** 		LCD_StateWriteBit(handle, 0, LCD_PIN_E);
 190:Src/hd44780.c **** 
 191:Src/hd44780.c **** 		LCD_WaitForBusyFlag(handle);
 192:Src/hd44780.c **** 
 193:Src/hd44780.c **** 		return LCD_OK;
 194:Src/hd44780.c **** 	} return LCD_ERROR;
 407              		.loc 1 194 0
 408 0008 0120     		movs	r0, #1
 409              	.LVL29:
 195:Src/hd44780.c **** 
 196:Src/hd44780.c **** }
 410              		.loc 1 196 0
 411 000a 38BD     		pop	{r3, r4, r5, pc}
 412              	.LVL30:
 413              	.L35:
 414 000c 0D46     		mov	r5, r1
 415 000e 0446     		mov	r4, r0
 180:Src/hd44780.c **** 		LCD_StateWriteBit(handle, 0, LCD_PIN_E);
 416              		.loc 1 180 0
 417 0010 0622     		movs	r2, #6
 418 0012 0021     		movs	r1, #0
 419              	.LVL31:
 420 0014 FFF7FEFF 		bl	LCD_StateWriteBit
 421              	.LVL32:
 181:Src/hd44780.c **** 
 422              		.loc 1 181 0
 423 0018 0422     		movs	r2, #4
 424 001a 0021     		movs	r1, #0
 425 001c 2046     		mov	r0, r4
 426 001e FFF7FEFF 		bl	LCD_StateWriteBit
 427              	.LVL33:
ARM GAS  /tmp/ccXPekIA.s 			page 12


 183:Src/hd44780.c **** 		LCD_StateWriteBit(handle, 1, LCD_PIN_E);
 428              		.loc 1 183 0
 429 0022 2909     		lsrs	r1, r5, #4
 430 0024 2046     		mov	r0, r4
 431 0026 FFF7FEFF 		bl	LCD_WriteToDataBus
 432              	.LVL34:
 184:Src/hd44780.c **** 		LCD_StateWriteBit(handle, 0, LCD_PIN_E);
 433              		.loc 1 184 0
 434 002a 0622     		movs	r2, #6
 435 002c 0121     		movs	r1, #1
 436 002e 2046     		mov	r0, r4
 437 0030 FFF7FEFF 		bl	LCD_StateWriteBit
 438              	.LVL35:
 185:Src/hd44780.c **** 
 439              		.loc 1 185 0
 440 0034 0622     		movs	r2, #6
 441 0036 0021     		movs	r1, #0
 442 0038 2046     		mov	r0, r4
 443 003a FFF7FEFF 		bl	LCD_StateWriteBit
 444              	.LVL36:
 187:Src/hd44780.c **** 		LCD_StateWriteBit(handle, 1, LCD_PIN_E);
 445              		.loc 1 187 0
 446 003e 2946     		mov	r1, r5
 447 0040 2046     		mov	r0, r4
 448 0042 FFF7FEFF 		bl	LCD_WriteToDataBus
 449              	.LVL37:
 188:Src/hd44780.c **** 		LCD_StateWriteBit(handle, 0, LCD_PIN_E);
 450              		.loc 1 188 0
 451 0046 0622     		movs	r2, #6
 452 0048 0121     		movs	r1, #1
 453 004a 2046     		mov	r0, r4
 454 004c FFF7FEFF 		bl	LCD_StateWriteBit
 455              	.LVL38:
 189:Src/hd44780.c **** 
 456              		.loc 1 189 0
 457 0050 0622     		movs	r2, #6
 458 0052 0021     		movs	r1, #0
 459 0054 2046     		mov	r0, r4
 460 0056 FFF7FEFF 		bl	LCD_StateWriteBit
 461              	.LVL39:
 191:Src/hd44780.c **** 
 462              		.loc 1 191 0
 463 005a 2046     		mov	r0, r4
 464 005c FFF7FEFF 		bl	LCD_WaitForBusyFlag
 465              	.LVL40:
 193:Src/hd44780.c **** 	} return LCD_ERROR;
 466              		.loc 1 193 0
 467 0060 0020     		movs	r0, #0
 468 0062 38BD     		pop	{r3, r4, r5, pc}
 469              	.LVL41:
 470              	.L37:
 471              		.align	2
 472              	.L36:
 473 0064 00000000 		.word	.LANCHOR0
 474              		.cfi_endproc
 475              	.LFE71:
 477              		.section	.text.LCD_WriteDATA,"ax",%progbits
ARM GAS  /tmp/ccXPekIA.s 			page 13


 478              		.align	1
 479              		.global	LCD_WriteDATA
 480              		.syntax unified
 481              		.thumb
 482              		.thumb_func
 483              		.fpu softvfp
 485              	LCD_WriteDATA:
 486              	.LFB72:
 197:Src/hd44780.c **** 
 198:Src/hd44780.c **** LCD_RESULT LCD_WriteDATA(LCD_PCF8574_HandleTypeDef* handle, uint8_t data) {
 487              		.loc 1 198 0
 488              		.cfi_startproc
 489              		@ args = 0, pretend = 0, frame = 0
 490              		@ frame_needed = 0, uses_anonymous_args = 0
 491              	.LVL42:
 492 0000 38B5     		push	{r3, r4, r5, lr}
 493              	.LCFI9:
 494              		.cfi_def_cfa_offset 16
 495              		.cfi_offset 3, -16
 496              		.cfi_offset 4, -12
 497              		.cfi_offset 5, -8
 498              		.cfi_offset 14, -4
 499 0002 0446     		mov	r4, r0
 500 0004 0D46     		mov	r5, r1
 199:Src/hd44780.c **** 
 200:Src/hd44780.c **** 	LCD_StateWriteBit(handle, 0, LCD_PIN_E);
 501              		.loc 1 200 0
 502 0006 0622     		movs	r2, #6
 503 0008 0021     		movs	r1, #0
 504              	.LVL43:
 505 000a FFF7FEFF 		bl	LCD_StateWriteBit
 506              	.LVL44:
 201:Src/hd44780.c **** 	LCD_StateWriteBit(handle, 1, LCD_PIN_RS);
 507              		.loc 1 201 0
 508 000e 0422     		movs	r2, #4
 509 0010 0121     		movs	r1, #1
 510 0012 2046     		mov	r0, r4
 511 0014 FFF7FEFF 		bl	LCD_StateWriteBit
 512              	.LVL45:
 202:Src/hd44780.c **** 
 203:Src/hd44780.c **** 	LCD_WriteToDataBus(handle, data >> 4);
 513              		.loc 1 203 0
 514 0018 2909     		lsrs	r1, r5, #4
 515 001a 2046     		mov	r0, r4
 516 001c FFF7FEFF 		bl	LCD_WriteToDataBus
 517              	.LVL46:
 204:Src/hd44780.c **** 	LCD_StateWriteBit(handle, 1, LCD_PIN_E);
 518              		.loc 1 204 0
 519 0020 0622     		movs	r2, #6
 520 0022 0121     		movs	r1, #1
 521 0024 2046     		mov	r0, r4
 522 0026 FFF7FEFF 		bl	LCD_StateWriteBit
 523              	.LVL47:
 205:Src/hd44780.c **** 	LCD_StateWriteBit(handle, 0, LCD_PIN_E);
 524              		.loc 1 205 0
 525 002a 0622     		movs	r2, #6
 526 002c 0021     		movs	r1, #0
ARM GAS  /tmp/ccXPekIA.s 			page 14


 527 002e 2046     		mov	r0, r4
 528 0030 FFF7FEFF 		bl	LCD_StateWriteBit
 529              	.LVL48:
 206:Src/hd44780.c **** 
 207:Src/hd44780.c **** 	LCD_WriteToDataBus(handle, data);
 530              		.loc 1 207 0
 531 0034 2946     		mov	r1, r5
 532 0036 2046     		mov	r0, r4
 533 0038 FFF7FEFF 		bl	LCD_WriteToDataBus
 534              	.LVL49:
 208:Src/hd44780.c **** 	LCD_StateWriteBit(handle, 1, LCD_PIN_E);
 535              		.loc 1 208 0
 536 003c 0622     		movs	r2, #6
 537 003e 0121     		movs	r1, #1
 538 0040 2046     		mov	r0, r4
 539 0042 FFF7FEFF 		bl	LCD_StateWriteBit
 540              	.LVL50:
 209:Src/hd44780.c **** 	LCD_StateWriteBit(handle, 0, LCD_PIN_E);
 541              		.loc 1 209 0
 542 0046 0622     		movs	r2, #6
 543 0048 0021     		movs	r1, #0
 544 004a 2046     		mov	r0, r4
 545 004c FFF7FEFF 		bl	LCD_StateWriteBit
 546              	.LVL51:
 210:Src/hd44780.c **** 
 211:Src/hd44780.c **** 	LCD_WaitForBusyFlag(handle);
 547              		.loc 1 211 0
 548 0050 2046     		mov	r0, r4
 549 0052 FFF7FEFF 		bl	LCD_WaitForBusyFlag
 550              	.LVL52:
 212:Src/hd44780.c **** 
 213:Src/hd44780.c **** 	return LCD_OK;
 214:Src/hd44780.c **** 
 215:Src/hd44780.c **** }
 551              		.loc 1 215 0
 552 0056 0020     		movs	r0, #0
 553 0058 38BD     		pop	{r3, r4, r5, pc}
 554              		.cfi_endproc
 555              	.LFE72:
 557              		.section	.text.LCD_SetLocation,"ax",%progbits
 558              		.align	1
 559              		.global	LCD_SetLocation
 560              		.syntax unified
 561              		.thumb
 562              		.thumb_func
 563              		.fpu softvfp
 565              	LCD_SetLocation:
 566              	.LFB73:
 216:Src/hd44780.c **** 
 217:Src/hd44780.c **** LCD_RESULT LCD_SetLocation(LCD_PCF8574_HandleTypeDef* handle, uint8_t x,
 218:Src/hd44780.c **** 		uint8_t y) {
 567              		.loc 1 218 0
 568              		.cfi_startproc
 569              		@ args = 0, pretend = 0, frame = 0
 570              		@ frame_needed = 0, uses_anonymous_args = 0
 571              	.LVL53:
 572 0000 08B5     		push	{r3, lr}
ARM GAS  /tmp/ccXPekIA.s 			page 15


 573              	.LCFI10:
 574              		.cfi_def_cfa_offset 8
 575              		.cfi_offset 3, -8
 576              		.cfi_offset 14, -4
 219:Src/hd44780.c **** 
 220:Src/hd44780.c **** 	uint8_t add = 0x40 * y + x;
 577              		.loc 1 220 0
 578 0002 9201     		lsls	r2, r2, #6
 579              	.LVL54:
 580 0004 D2B2     		uxtb	r2, r2
 581 0006 1144     		add	r1, r1, r2
 582              	.LVL55:
 221:Src/hd44780.c **** 	uint8_t cmd = 1 << 7;
 222:Src/hd44780.c **** 	cmd = cmd | add;
 583              		.loc 1 222 0
 584 0008 61F07F01 		orn	r1, r1, #127
 585              	.LVL56:
 223:Src/hd44780.c **** 	return LCD_WriteCMD(handle, cmd);
 586              		.loc 1 223 0
 587 000c C9B2     		uxtb	r1, r1
 588 000e FFF7FEFF 		bl	LCD_WriteCMD
 589              	.LVL57:
 224:Src/hd44780.c **** 
 225:Src/hd44780.c **** }
 590              		.loc 1 225 0
 591 0012 08BD     		pop	{r3, pc}
 592              		.cfi_endproc
 593              	.LFE73:
 595              		.section	.text.LCD_WriteString,"ax",%progbits
 596              		.align	1
 597              		.global	LCD_WriteString
 598              		.syntax unified
 599              		.thumb
 600              		.thumb_func
 601              		.fpu softvfp
 603              	LCD_WriteString:
 604              	.LFB74:
 226:Src/hd44780.c **** 
 227:Src/hd44780.c **** LCD_RESULT LCD_WriteString(LCD_PCF8574_HandleTypeDef* handle, char *s) {
 605              		.loc 1 227 0
 606              		.cfi_startproc
 607              		@ args = 0, pretend = 0, frame = 0
 608              		@ frame_needed = 0, uses_anonymous_args = 0
 609              	.LVL58:
 228:Src/hd44780.c **** 	int i = 0;
 229:Src/hd44780.c **** 
 230:Src/hd44780.c **** 	if (s != 0) {
 610              		.loc 1 230 0
 611 0000 99B1     		cbz	r1, .L50
 227:Src/hd44780.c **** 	int i = 0;
 612              		.loc 1 227 0
 613 0002 70B5     		push	{r4, r5, r6, lr}
 614              	.LCFI11:
 615              		.cfi_def_cfa_offset 16
 616              		.cfi_offset 4, -16
 617              		.cfi_offset 5, -12
 618              		.cfi_offset 6, -8
ARM GAS  /tmp/ccXPekIA.s 			page 16


 619              		.cfi_offset 14, -4
 620 0004 0D46     		mov	r5, r1
 621 0006 0646     		mov	r6, r0
 622 0008 0024     		movs	r4, #0
 623 000a 07E0     		b	.L43
 624              	.LVL59:
 625              	.L45:
 231:Src/hd44780.c **** 
 232:Src/hd44780.c **** 		while (i < 80 && s[i] != 0) {
 233:Src/hd44780.c **** 			LCD_WaitForBusyFlag(handle);
 626              		.loc 1 233 0
 627 000c 3046     		mov	r0, r6
 628 000e FFF7FEFF 		bl	LCD_WaitForBusyFlag
 629              	.LVL60:
 234:Src/hd44780.c **** 			LCD_WriteDATA(handle, s[i]);
 630              		.loc 1 234 0
 631 0012 295D     		ldrb	r1, [r5, r4]	@ zero_extendqisi2
 632 0014 3046     		mov	r0, r6
 633 0016 FFF7FEFF 		bl	LCD_WriteDATA
 634              	.LVL61:
 235:Src/hd44780.c **** 			i++;
 635              		.loc 1 235 0
 636 001a 0134     		adds	r4, r4, #1
 637              	.LVL62:
 638              	.L43:
 232:Src/hd44780.c **** 			LCD_WaitForBusyFlag(handle);
 639              		.loc 1 232 0
 640 001c 4F2C     		cmp	r4, #79
 641 001e 02DC     		bgt	.L44
 232:Src/hd44780.c **** 			LCD_WaitForBusyFlag(handle);
 642              		.loc 1 232 0 is_stmt 0 discriminator 1
 643 0020 2B5D     		ldrb	r3, [r5, r4]	@ zero_extendqisi2
 644 0022 002B     		cmp	r3, #0
 645 0024 F2D1     		bne	.L45
 646              	.L44:
 236:Src/hd44780.c **** 		}
 237:Src/hd44780.c **** 	}
 238:Src/hd44780.c **** 	return LCD_OK;
 239:Src/hd44780.c **** }
 647              		.loc 1 239 0 is_stmt 1
 648 0026 0020     		movs	r0, #0
 649 0028 70BD     		pop	{r4, r5, r6, pc}
 650              	.LVL63:
 651              	.L50:
 652              	.LCFI12:
 653              		.cfi_def_cfa_offset 0
 654              		.cfi_restore 4
 655              		.cfi_restore 5
 656              		.cfi_restore 6
 657              		.cfi_restore 14
 658 002a 0020     		movs	r0, #0
 659              	.LVL64:
 660 002c 7047     		bx	lr
 661              		.cfi_endproc
 662              	.LFE74:
 664              		.section	.text.LCD_ClearDisplay,"ax",%progbits
 665              		.align	1
ARM GAS  /tmp/ccXPekIA.s 			page 17


 666              		.global	LCD_ClearDisplay
 667              		.syntax unified
 668              		.thumb
 669              		.thumb_func
 670              		.fpu softvfp
 672              	LCD_ClearDisplay:
 673              	.LFB75:
 240:Src/hd44780.c **** 
 241:Src/hd44780.c **** LCD_RESULT LCD_ClearDisplay(LCD_PCF8574_HandleTypeDef* handle) {
 674              		.loc 1 241 0
 675              		.cfi_startproc
 676              		@ args = 0, pretend = 0, frame = 0
 677              		@ frame_needed = 0, uses_anonymous_args = 0
 678              	.LVL65:
 679 0000 08B5     		push	{r3, lr}
 680              	.LCFI13:
 681              		.cfi_def_cfa_offset 8
 682              		.cfi_offset 3, -8
 683              		.cfi_offset 14, -4
 242:Src/hd44780.c **** 	return LCD_WriteCMD(handle, 1);
 684              		.loc 1 242 0
 685 0002 0121     		movs	r1, #1
 686 0004 FFF7FEFF 		bl	LCD_WriteCMD
 687              	.LVL66:
 243:Src/hd44780.c **** }
 688              		.loc 1 243 0
 689 0008 08BD     		pop	{r3, pc}
 690              		.cfi_endproc
 691              	.LFE75:
 693              		.section	.text.LCD_DisplayON,"ax",%progbits
 694              		.align	1
 695              		.global	LCD_DisplayON
 696              		.syntax unified
 697              		.thumb
 698              		.thumb_func
 699              		.fpu softvfp
 701              	LCD_DisplayON:
 702              	.LFB76:
 244:Src/hd44780.c **** 
 245:Src/hd44780.c **** LCD_RESULT LCD_DisplayON(LCD_PCF8574_HandleTypeDef* handle) {
 703              		.loc 1 245 0
 704              		.cfi_startproc
 705              		@ args = 0, pretend = 0, frame = 0
 706              		@ frame_needed = 0, uses_anonymous_args = 0
 707              	.LVL67:
 708 0000 08B5     		push	{r3, lr}
 709              	.LCFI14:
 710              		.cfi_def_cfa_offset 8
 711              		.cfi_offset 3, -8
 712              		.cfi_offset 14, -4
 246:Src/hd44780.c **** 	handle->D = 1;
 713              		.loc 1 246 0
 714 0002 0123     		movs	r3, #1
 715 0004 4370     		strb	r3, [r0, #1]
 716              	.LVL68:
 247:Src/hd44780.c **** 	uint8_t cmd = 0;
 248:Src/hd44780.c **** 	cmd = cmd | (1 << 3);
ARM GAS  /tmp/ccXPekIA.s 			page 18


 249:Src/hd44780.c **** 	cmd = cmd | (handle->D << 2);
 250:Src/hd44780.c **** 	cmd = cmd | (handle->C << 1);
 717              		.loc 1 250 0
 718 0006 8378     		ldrb	r3, [r0, #2]	@ zero_extendqisi2
 719 0008 5B00     		lsls	r3, r3, #1
 720 000a 43F00C03 		orr	r3, r3, #12
 721 000e 03F0FE03 		and	r3, r3, #254
 722              	.LVL69:
 251:Src/hd44780.c **** 	cmd = cmd | handle->B;
 723              		.loc 1 251 0
 724 0012 C178     		ldrb	r1, [r0, #3]	@ zero_extendqisi2
 725              	.LVL70:
 252:Src/hd44780.c **** 	return LCD_WriteCMD(handle, cmd);
 726              		.loc 1 252 0
 727 0014 1943     		orrs	r1, r1, r3
 728              	.LVL71:
 729 0016 FFF7FEFF 		bl	LCD_WriteCMD
 730              	.LVL72:
 253:Src/hd44780.c **** }
 731              		.loc 1 253 0
 732 001a 08BD     		pop	{r3, pc}
 733              		.cfi_endproc
 734              	.LFE76:
 736              		.section	.text.LCD_DisplayOFF,"ax",%progbits
 737              		.align	1
 738              		.global	LCD_DisplayOFF
 739              		.syntax unified
 740              		.thumb
 741              		.thumb_func
 742              		.fpu softvfp
 744              	LCD_DisplayOFF:
 745              	.LFB77:
 254:Src/hd44780.c **** 
 255:Src/hd44780.c **** LCD_RESULT LCD_DisplayOFF(LCD_PCF8574_HandleTypeDef* handle) {
 746              		.loc 1 255 0
 747              		.cfi_startproc
 748              		@ args = 0, pretend = 0, frame = 0
 749              		@ frame_needed = 0, uses_anonymous_args = 0
 750              	.LVL73:
 751 0000 08B5     		push	{r3, lr}
 752              	.LCFI15:
 753              		.cfi_def_cfa_offset 8
 754              		.cfi_offset 3, -8
 755              		.cfi_offset 14, -4
 256:Src/hd44780.c **** 	handle->D = 0;
 756              		.loc 1 256 0
 757 0002 0023     		movs	r3, #0
 758 0004 4370     		strb	r3, [r0, #1]
 759              	.LVL74:
 257:Src/hd44780.c **** 	uint8_t cmd = 0;
 258:Src/hd44780.c **** 	cmd = cmd | (1 << 3);
 259:Src/hd44780.c **** 	cmd = cmd | (handle->D << 2);
 260:Src/hd44780.c **** 	cmd = cmd | (handle->C << 1);
 760              		.loc 1 260 0
 761 0006 8378     		ldrb	r3, [r0, #2]	@ zero_extendqisi2
 762 0008 5B00     		lsls	r3, r3, #1
 763 000a 43F00803 		orr	r3, r3, #8
ARM GAS  /tmp/ccXPekIA.s 			page 19


 764 000e 03F0FE03 		and	r3, r3, #254
 765              	.LVL75:
 261:Src/hd44780.c **** 	cmd = cmd | handle->B;
 766              		.loc 1 261 0
 767 0012 C178     		ldrb	r1, [r0, #3]	@ zero_extendqisi2
 768              	.LVL76:
 262:Src/hd44780.c **** 	return LCD_WriteCMD(handle, cmd);
 769              		.loc 1 262 0
 770 0014 1943     		orrs	r1, r1, r3
 771              	.LVL77:
 772 0016 FFF7FEFF 		bl	LCD_WriteCMD
 773              	.LVL78:
 263:Src/hd44780.c **** }
 774              		.loc 1 263 0
 775 001a 08BD     		pop	{r3, pc}
 776              		.cfi_endproc
 777              	.LFE77:
 779              		.section	.text.LCD_CursorON,"ax",%progbits
 780              		.align	1
 781              		.global	LCD_CursorON
 782              		.syntax unified
 783              		.thumb
 784              		.thumb_func
 785              		.fpu softvfp
 787              	LCD_CursorON:
 788              	.LFB78:
 264:Src/hd44780.c **** 
 265:Src/hd44780.c **** LCD_RESULT LCD_CursorON(LCD_PCF8574_HandleTypeDef* handle, uint8_t blink) {
 789              		.loc 1 265 0
 790              		.cfi_startproc
 791              		@ args = 0, pretend = 0, frame = 0
 792              		@ frame_needed = 0, uses_anonymous_args = 0
 793              	.LVL79:
 794 0000 08B5     		push	{r3, lr}
 795              	.LCFI16:
 796              		.cfi_def_cfa_offset 8
 797              		.cfi_offset 3, -8
 798              		.cfi_offset 14, -4
 266:Src/hd44780.c **** 	handle->C = 1;
 799              		.loc 1 266 0
 800 0002 0122     		movs	r2, #1
 801 0004 8270     		strb	r2, [r0, #2]
 267:Src/hd44780.c **** 	blink &= 1;
 802              		.loc 1 267 0
 803 0006 1140     		ands	r1, r1, r2
 804              	.LVL80:
 268:Src/hd44780.c **** 	handle->B = blink;
 805              		.loc 1 268 0
 806 0008 C170     		strb	r1, [r0, #3]
 807              	.LVL81:
 269:Src/hd44780.c **** 	uint8_t cmd = 0;
 270:Src/hd44780.c **** 	cmd = cmd | (1 << 3);
 271:Src/hd44780.c **** 	cmd = cmd | (handle->D << 2);
 808              		.loc 1 271 0
 809 000a 4378     		ldrb	r3, [r0, #1]	@ zero_extendqisi2
 810 000c 9B00     		lsls	r3, r3, #2
 811 000e 43F00803 		orr	r3, r3, #8
ARM GAS  /tmp/ccXPekIA.s 			page 20


 812 0012 5BB2     		sxtb	r3, r3
 813              	.LVL82:
 272:Src/hd44780.c **** 	cmd = cmd | (handle->C << 1);
 814              		.loc 1 272 0
 815 0014 43F00203 		orr	r3, r3, #2
 816              	.LVL83:
 817 0018 DBB2     		uxtb	r3, r3
 818              	.LVL84:
 273:Src/hd44780.c **** 	cmd = cmd | handle->B;
 274:Src/hd44780.c **** 	return LCD_WriteCMD(handle, cmd);
 819              		.loc 1 274 0
 820 001a 1943     		orrs	r1, r1, r3
 821              	.LVL85:
 822 001c FFF7FEFF 		bl	LCD_WriteCMD
 823              	.LVL86:
 275:Src/hd44780.c **** }
 824              		.loc 1 275 0
 825 0020 08BD     		pop	{r3, pc}
 826              		.cfi_endproc
 827              	.LFE78:
 829              		.section	.text.LCD_CursorOFF,"ax",%progbits
 830              		.align	1
 831              		.global	LCD_CursorOFF
 832              		.syntax unified
 833              		.thumb
 834              		.thumb_func
 835              		.fpu softvfp
 837              	LCD_CursorOFF:
 838              	.LFB79:
 276:Src/hd44780.c **** 
 277:Src/hd44780.c **** LCD_RESULT LCD_CursorOFF(LCD_PCF8574_HandleTypeDef* handle) {
 839              		.loc 1 277 0
 840              		.cfi_startproc
 841              		@ args = 0, pretend = 0, frame = 0
 842              		@ frame_needed = 0, uses_anonymous_args = 0
 843              	.LVL87:
 844 0000 08B5     		push	{r3, lr}
 845              	.LCFI17:
 846              		.cfi_def_cfa_offset 8
 847              		.cfi_offset 3, -8
 848              		.cfi_offset 14, -4
 278:Src/hd44780.c **** 	handle->C = 0;
 849              		.loc 1 278 0
 850 0002 0023     		movs	r3, #0
 851 0004 8370     		strb	r3, [r0, #2]
 852              	.LVL88:
 279:Src/hd44780.c **** 	uint8_t cmd = 0;
 280:Src/hd44780.c **** 	cmd = cmd | (1 << 3);
 281:Src/hd44780.c **** 	cmd = cmd | (handle->D << 2);
 853              		.loc 1 281 0
 854 0006 4378     		ldrb	r3, [r0, #1]	@ zero_extendqisi2
 855 0008 9B00     		lsls	r3, r3, #2
 856 000a 43F00803 		orr	r3, r3, #8
 857 000e 03F0FC03 		and	r3, r3, #252
 858              	.LVL89:
 282:Src/hd44780.c **** 	cmd = cmd | (handle->C << 1);
 283:Src/hd44780.c **** 	cmd = cmd | handle->B;
ARM GAS  /tmp/ccXPekIA.s 			page 21


 859              		.loc 1 283 0
 860 0012 C178     		ldrb	r1, [r0, #3]	@ zero_extendqisi2
 861              	.LVL90:
 284:Src/hd44780.c **** 	return LCD_WriteCMD(handle, cmd);
 862              		.loc 1 284 0
 863 0014 1943     		orrs	r1, r1, r3
 864              	.LVL91:
 865 0016 FFF7FEFF 		bl	LCD_WriteCMD
 866              	.LVL92:
 285:Src/hd44780.c **** }
 867              		.loc 1 285 0
 868 001a 08BD     		pop	{r3, pc}
 869              		.cfi_endproc
 870              	.LFE79:
 872              		.section	.text.LCD_ShiftCursor,"ax",%progbits
 873              		.align	1
 874              		.global	LCD_ShiftCursor
 875              		.syntax unified
 876              		.thumb
 877              		.thumb_func
 878              		.fpu softvfp
 880              	LCD_ShiftCursor:
 881              	.LFB80:
 286:Src/hd44780.c **** 
 287:Src/hd44780.c **** LCD_RESULT LCD_ShiftCursor(LCD_PCF8574_HandleTypeDef* handle, uint8_t direction,
 288:Src/hd44780.c **** 		uint8_t steps) {
 882              		.loc 1 288 0
 883              		.cfi_startproc
 884              		@ args = 0, pretend = 0, frame = 0
 885              		@ frame_needed = 0, uses_anonymous_args = 0
 886              	.LVL93:
 887 0000 F8B5     		push	{r3, r4, r5, r6, r7, lr}
 888              	.LCFI18:
 889              		.cfi_def_cfa_offset 24
 890              		.cfi_offset 3, -24
 891              		.cfi_offset 4, -20
 892              		.cfi_offset 5, -16
 893              		.cfi_offset 6, -12
 894              		.cfi_offset 7, -8
 895              		.cfi_offset 14, -4
 896 0002 0746     		mov	r7, r0
 897 0004 1646     		mov	r6, r2
 289:Src/hd44780.c **** 	direction &= 1;
 898              		.loc 1 289 0
 899 0006 01F00105 		and	r5, r1, #1
 900              	.LVL94:
 290:Src/hd44780.c **** 
 291:Src/hd44780.c **** 	uint8_t cmd = 0;
 292:Src/hd44780.c **** 	cmd |= 1 << 4;
 293:Src/hd44780.c **** 	cmd |= direction << 2;
 901              		.loc 1 293 0
 902 000a AD00     		lsls	r5, r5, #2
 903              	.LVL95:
 904 000c 45F01005 		orr	r5, r5, #16
 905              	.LVL96:
 294:Src/hd44780.c **** 
 295:Src/hd44780.c **** 	int i = 0;
ARM GAS  /tmp/ccXPekIA.s 			page 22


 296:Src/hd44780.c **** 	for (i = 0; i < steps; i++) {
 906              		.loc 1 296 0
 907 0010 0024     		movs	r4, #0
 908              	.LVL97:
 909              	.L62:
 910              		.loc 1 296 0 is_stmt 0 discriminator 1
 911 0012 B442     		cmp	r4, r6
 912 0014 06DA     		bge	.L67
 297:Src/hd44780.c **** 		if (LCD_WriteCMD(handle, cmd) != LCD_OK) {
 913              		.loc 1 297 0 is_stmt 1
 914 0016 2946     		mov	r1, r5
 915 0018 3846     		mov	r0, r7
 916 001a FFF7FEFF 		bl	LCD_WriteCMD
 917              	.LVL98:
 918 001e 18B9     		cbnz	r0, .L65
 296:Src/hd44780.c **** 		if (LCD_WriteCMD(handle, cmd) != LCD_OK) {
 919              		.loc 1 296 0 discriminator 2
 920 0020 0134     		adds	r4, r4, #1
 921              	.LVL99:
 922 0022 F6E7     		b	.L62
 923              	.L67:
 298:Src/hd44780.c **** 			//handle->errorCallback(LCD_ERROR);
 299:Src/hd44780.c **** 			return LCD_ERROR;
 300:Src/hd44780.c **** 		}
 301:Src/hd44780.c **** 	}
 302:Src/hd44780.c **** 	return LCD_OK;
 924              		.loc 1 302 0
 925 0024 0020     		movs	r0, #0
 926 0026 F8BD     		pop	{r3, r4, r5, r6, r7, pc}
 927              	.LVL100:
 928              	.L65:
 299:Src/hd44780.c **** 		}
 929              		.loc 1 299 0
 930 0028 0120     		movs	r0, #1
 303:Src/hd44780.c **** }
 931              		.loc 1 303 0
 932 002a F8BD     		pop	{r3, r4, r5, r6, r7, pc}
 933              		.cfi_endproc
 934              	.LFE80:
 936              		.section	.text.LCD_ShiftDisplay,"ax",%progbits
 937              		.align	1
 938              		.global	LCD_ShiftDisplay
 939              		.syntax unified
 940              		.thumb
 941              		.thumb_func
 942              		.fpu softvfp
 944              	LCD_ShiftDisplay:
 945              	.LFB81:
 304:Src/hd44780.c **** 
 305:Src/hd44780.c **** LCD_RESULT LCD_ShiftDisplay(LCD_PCF8574_HandleTypeDef* handle,
 306:Src/hd44780.c **** 		uint8_t direction, uint8_t steps) {
 946              		.loc 1 306 0
 947              		.cfi_startproc
 948              		@ args = 0, pretend = 0, frame = 0
 949              		@ frame_needed = 0, uses_anonymous_args = 0
 950              	.LVL101:
 951 0000 F8B5     		push	{r3, r4, r5, r6, r7, lr}
ARM GAS  /tmp/ccXPekIA.s 			page 23


 952              	.LCFI19:
 953              		.cfi_def_cfa_offset 24
 954              		.cfi_offset 3, -24
 955              		.cfi_offset 4, -20
 956              		.cfi_offset 5, -16
 957              		.cfi_offset 6, -12
 958              		.cfi_offset 7, -8
 959              		.cfi_offset 14, -4
 960 0002 0746     		mov	r7, r0
 961 0004 1646     		mov	r6, r2
 307:Src/hd44780.c **** 	direction &= 1;
 962              		.loc 1 307 0
 963 0006 01F00105 		and	r5, r1, #1
 964              	.LVL102:
 308:Src/hd44780.c **** 
 309:Src/hd44780.c **** 	uint8_t cmd = 0;
 310:Src/hd44780.c **** 	cmd |= 1 << 4;
 311:Src/hd44780.c **** 	cmd |= 1 << 3;
 312:Src/hd44780.c **** 	cmd |= direction << 2;
 965              		.loc 1 312 0
 966 000a AD00     		lsls	r5, r5, #2
 967              	.LVL103:
 968 000c 45F01805 		orr	r5, r5, #24
 969              	.LVL104:
 313:Src/hd44780.c **** 
 314:Src/hd44780.c **** 	int i = 0;
 315:Src/hd44780.c **** 	for (i = 0; i < steps; i++) {
 970              		.loc 1 315 0
 971 0010 0024     		movs	r4, #0
 972              	.LVL105:
 973              	.L69:
 974              		.loc 1 315 0 is_stmt 0 discriminator 1
 975 0012 B442     		cmp	r4, r6
 976 0014 06DA     		bge	.L74
 316:Src/hd44780.c **** 		if (LCD_WriteCMD(handle, cmd) != LCD_OK) {
 977              		.loc 1 316 0 is_stmt 1
 978 0016 2946     		mov	r1, r5
 979 0018 3846     		mov	r0, r7
 980 001a FFF7FEFF 		bl	LCD_WriteCMD
 981              	.LVL106:
 982 001e 18B9     		cbnz	r0, .L72
 315:Src/hd44780.c **** 		if (LCD_WriteCMD(handle, cmd) != LCD_OK) {
 983              		.loc 1 315 0 discriminator 2
 984 0020 0134     		adds	r4, r4, #1
 985              	.LVL107:
 986 0022 F6E7     		b	.L69
 987              	.L74:
 317:Src/hd44780.c **** 			//handle->errorCallback(LCD_ERROR);
 318:Src/hd44780.c **** 			return LCD_ERROR;
 319:Src/hd44780.c **** 		}
 320:Src/hd44780.c **** 	}
 321:Src/hd44780.c **** 	return LCD_OK;
 988              		.loc 1 321 0
 989 0024 0020     		movs	r0, #0
 990 0026 F8BD     		pop	{r3, r4, r5, r6, r7, pc}
 991              	.LVL108:
 992              	.L72:
ARM GAS  /tmp/ccXPekIA.s 			page 24


 318:Src/hd44780.c **** 		}
 993              		.loc 1 318 0
 994 0028 0120     		movs	r0, #1
 322:Src/hd44780.c **** }
 995              		.loc 1 322 0
 996 002a F8BD     		pop	{r3, r4, r5, r6, r7, pc}
 997              		.cfi_endproc
 998              	.LFE81:
 1000              		.section	.text.LCD_WriteNumber,"ax",%progbits
 1001              		.align	1
 1002              		.global	LCD_WriteNumber
 1003              		.syntax unified
 1004              		.thumb
 1005              		.thumb_func
 1006              		.fpu softvfp
 1008              	LCD_WriteNumber:
 1009              	.LFB82:
 323:Src/hd44780.c **** 
 324:Src/hd44780.c **** LCD_RESULT LCD_WriteNumber(LCD_PCF8574_HandleTypeDef* handle, unsigned long n,
 325:Src/hd44780.c **** 		uint8_t base) {
 1010              		.loc 1 325 0
 1011              		.cfi_startproc
 1012              		@ args = 0, pretend = 0, frame = 40
 1013              		@ frame_needed = 0, uses_anonymous_args = 0
 1014              	.LVL109:
 1015 0000 30B5     		push	{r4, r5, lr}
 1016              	.LCFI20:
 1017              		.cfi_def_cfa_offset 12
 1018              		.cfi_offset 4, -12
 1019              		.cfi_offset 5, -8
 1020              		.cfi_offset 14, -4
 1021 0002 8BB0     		sub	sp, sp, #44
 1022              	.LCFI21:
 1023              		.cfi_def_cfa_offset 56
 1024 0004 0B46     		mov	r3, r1
 1025              	.LVL110:
 326:Src/hd44780.c **** 
 327:Src/hd44780.c **** 	char buf[8 * sizeof(long) + 1]; // Assumes 8-bit chars plus zero byte.
 328:Src/hd44780.c **** 	char *str = &buf[sizeof(buf) - 1];
 329:Src/hd44780.c **** 
 330:Src/hd44780.c **** 	*str = '\0';
 1026              		.loc 1 330 0
 1027 0006 0021     		movs	r1, #0
 1028              	.LVL111:
 1029 0008 8DF82410 		strb	r1, [sp, #36]
 331:Src/hd44780.c **** 
 332:Src/hd44780.c **** 	// prevent crash if called with base == 1
 333:Src/hd44780.c **** 	if (base < 2)
 1030              		.loc 1 333 0
 1031 000c 012A     		cmp	r2, #1
 1032 000e 01D9     		bls	.L82
 1033              	.LVL112:
 1034              	.L76:
 334:Src/hd44780.c **** 		base = 10;
 1035              		.loc 1 334 0
 1036 0010 09A9     		add	r1, sp, #36
 1037              	.LVL113:
ARM GAS  /tmp/ccXPekIA.s 			page 25


 1038 0012 06E0     		b	.L79
 1039              	.LVL114:
 1040              	.L82:
 1041 0014 0A22     		movs	r2, #10
 1042              	.LVL115:
 1043 0016 FBE7     		b	.L76
 1044              	.LVL116:
 1045              	.L77:
 1046              	.LBB2:
 335:Src/hd44780.c **** 
 336:Src/hd44780.c **** 	do {
 337:Src/hd44780.c **** 		unsigned long m = n;
 338:Src/hd44780.c **** 		n /= base;
 339:Src/hd44780.c **** 		char c = m - base * n;
 340:Src/hd44780.c **** 		*--str = c < 10 ? c + '0' : c + 'A' - 10;
 1047              		.loc 1 340 0 discriminator 2
 1048 0018 3733     		adds	r3, r3, #55
 1049              	.LVL117:
 1050 001a DBB2     		uxtb	r3, r3
 1051              	.LVL118:
 1052              	.L78:
 1053              		.loc 1 340 0 is_stmt 0 discriminator 4
 1054 001c 0B70     		strb	r3, [r1]
 338:Src/hd44780.c **** 		char c = m - base * n;
 1055              		.loc 1 338 0 is_stmt 1 discriminator 4
 1056 001e 2346     		mov	r3, r4
 1057              	.LBE2:
 341:Src/hd44780.c **** 	} while (n);
 1058              		.loc 1 341 0 discriminator 4
 1059 0020 6CB1     		cbz	r4, .L83
 1060              	.LVL119:
 1061              	.L79:
 1062              	.LBB3:
 338:Src/hd44780.c **** 		char c = m - base * n;
 1063              		.loc 1 338 0
 1064 0022 B3FBF2F4 		udiv	r4, r3, r2
 1065              	.LVL120:
 339:Src/hd44780.c **** 		*--str = c < 10 ? c + '0' : c + 'A' - 10;
 1066              		.loc 1 339 0
 1067 0026 DBB2     		uxtb	r3, r3
 1068              	.LVL121:
 1069 0028 04FB02F5 		mul	r5, r4, r2
 1070 002c EDB2     		uxtb	r5, r5
 1071 002e 5B1B     		subs	r3, r3, r5
 1072 0030 DBB2     		uxtb	r3, r3
 1073              	.LVL122:
 340:Src/hd44780.c **** 	} while (n);
 1074              		.loc 1 340 0
 1075 0032 0139     		subs	r1, r1, #1
 1076              	.LVL123:
 1077 0034 092B     		cmp	r3, #9
 1078 0036 EFD8     		bhi	.L77
 340:Src/hd44780.c **** 	} while (n);
 1079              		.loc 1 340 0 is_stmt 0 discriminator 1
 1080 0038 3033     		adds	r3, r3, #48
 1081              	.LVL124:
 1082 003a DBB2     		uxtb	r3, r3
ARM GAS  /tmp/ccXPekIA.s 			page 26


 1083              	.LVL125:
 1084 003c EEE7     		b	.L78
 1085              	.LVL126:
 1086              	.L83:
 1087              	.LBE3:
 342:Src/hd44780.c **** 	return LCD_WriteString(handle, str);
 1088              		.loc 1 342 0 is_stmt 1
 1089 003e FFF7FEFF 		bl	LCD_WriteString
 1090              	.LVL127:
 343:Src/hd44780.c **** }
 1091              		.loc 1 343 0
 1092 0042 0BB0     		add	sp, sp, #44
 1093              	.LCFI22:
 1094              		.cfi_def_cfa_offset 12
 1095              		@ sp needed
 1096 0044 30BD     		pop	{r4, r5, pc}
 1097              		.cfi_endproc
 1098              	.LFE82:
 1100              		.global	__aeabi_dcmplt
 1101              		.global	__aeabi_ddiv
 1102              		.global	__aeabi_dadd
 1103              		.global	__aeabi_d2uiz
 1104              		.global	__aeabi_ui2d
 1105              		.global	__aeabi_dsub
 1106              		.global	__aeabi_dmul
 1107              		.global	__aeabi_d2iz
 1108              		.global	__aeabi_i2d
 1109              		.section	.text.LCD_WriteFloat,"ax",%progbits
 1110              		.align	1
 1111              		.global	LCD_WriteFloat
 1112              		.syntax unified
 1113              		.thumb
 1114              		.thumb_func
 1115              		.fpu softvfp
 1117              	LCD_WriteFloat:
 1118              	.LFB83:
 344:Src/hd44780.c **** 
 345:Src/hd44780.c **** LCD_RESULT LCD_WriteFloat(LCD_PCF8574_HandleTypeDef* handle, double number,
 346:Src/hd44780.c **** 		uint8_t digits) {
 1119              		.loc 1 346 0
 1120              		.cfi_startproc
 1121              		@ args = 4, pretend = 0, frame = 0
 1122              		@ frame_needed = 0, uses_anonymous_args = 0
 1123              	.LVL128:
 1124 0000 2DE9F041 		push	{r4, r5, r6, r7, r8, lr}
 1125              	.LCFI23:
 1126              		.cfi_def_cfa_offset 24
 1127              		.cfi_offset 4, -24
 1128              		.cfi_offset 5, -20
 1129              		.cfi_offset 6, -16
 1130              		.cfi_offset 7, -12
 1131              		.cfi_offset 8, -8
 1132              		.cfi_offset 14, -4
 1133 0004 8046     		mov	r8, r0
 1134 0006 1746     		mov	r7, r2
 1135 0008 1E46     		mov	r6, r3
 1136 000a 9DF81850 		ldrb	r5, [sp, #24]	@ zero_extendqisi2
ARM GAS  /tmp/ccXPekIA.s 			page 27


 347:Src/hd44780.c **** 	// Handle negative numbers
 348:Src/hd44780.c **** 	if (number < 0.0) {
 1137              		.loc 1 348 0
 1138 000e 0022     		movs	r2, #0
 1139              	.LVL129:
 1140 0010 0023     		movs	r3, #0
 1141 0012 3846     		mov	r0, r7
 1142              	.LVL130:
 1143 0014 3146     		mov	r1, r6
 1144 0016 FFF7FEFF 		bl	__aeabi_dcmplt
 1145              	.LVL131:
 1146 001a 18B9     		cbnz	r0, .L94
 1147              	.LVL132:
 1148              	.L85:
 1149              	.LBB4:
 349:Src/hd44780.c **** 		LCD_WriteString(handle,"-");
 350:Src/hd44780.c **** 		number = -number;
 351:Src/hd44780.c **** 	}
 352:Src/hd44780.c **** 
 353:Src/hd44780.c **** 	// Round correctly so that print(1.999, 2) prints as "2.00"
 354:Src/hd44780.c **** 	double rounding = 0.5;
 355:Src/hd44780.c **** 	for (uint8_t i = 0; i < digits; ++i)
 1150              		.loc 1 355 0
 1151 001c 0024     		movs	r4, #0
 1152              	.LBE4:
 354:Src/hd44780.c **** 	for (uint8_t i = 0; i < digits; ++i)
 1153              		.loc 1 354 0
 1154 001e 0020     		movs	r0, #0
 1155 0020 2949     		ldr	r1, .L95
 1156              	.LBB5:
 1157              		.loc 1 355 0
 1158 0022 0CE0     		b	.L87
 1159              	.LVL133:
 1160              	.L94:
 1161              	.LBE5:
 349:Src/hd44780.c **** 		LCD_WriteString(handle,"-");
 1162              		.loc 1 349 0
 1163 0024 2949     		ldr	r1, .L95+4
 1164 0026 4046     		mov	r0, r8
 1165 0028 FFF7FEFF 		bl	LCD_WriteString
 1166              	.LVL134:
 350:Src/hd44780.c **** 	}
 1167              		.loc 1 350 0
 1168 002c 06F10046 		add	r6, r6, #-2147483648
 1169              	.LVL135:
 1170 0030 F4E7     		b	.L85
 1171              	.LVL136:
 1172              	.L88:
 1173              	.LBB6:
 356:Src/hd44780.c **** 		rounding /= 10.0;
 1174              		.loc 1 356 0 discriminator 3
 1175 0032 0022     		movs	r2, #0
 1176 0034 264B     		ldr	r3, .L95+8
 1177 0036 FFF7FEFF 		bl	__aeabi_ddiv
 1178              	.LVL137:
 355:Src/hd44780.c **** 		rounding /= 10.0;
 1179              		.loc 1 355 0 discriminator 3
ARM GAS  /tmp/ccXPekIA.s 			page 28


 1180 003a 0134     		adds	r4, r4, #1
 1181              	.LVL138:
 1182 003c E4B2     		uxtb	r4, r4
 1183              	.LVL139:
 1184              	.L87:
 355:Src/hd44780.c **** 		rounding /= 10.0;
 1185              		.loc 1 355 0 is_stmt 0 discriminator 1
 1186 003e AC42     		cmp	r4, r5
 1187 0040 F7D3     		bcc	.L88
 1188              	.LBE6:
 357:Src/hd44780.c **** 
 358:Src/hd44780.c **** 	number += rounding;
 1189              		.loc 1 358 0 is_stmt 1
 1190 0042 0246     		mov	r2, r0
 1191 0044 0B46     		mov	r3, r1
 1192 0046 3846     		mov	r0, r7
 1193              	.LVL140:
 1194 0048 3146     		mov	r1, r6
 1195 004a FFF7FEFF 		bl	__aeabi_dadd
 1196              	.LVL141:
 1197 004e 0646     		mov	r6, r0
 1198              	.LVL142:
 1199 0050 0F46     		mov	r7, r1
 1200              	.LVL143:
 359:Src/hd44780.c **** 
 360:Src/hd44780.c **** 	// Extract the integer part of the number and print it
 361:Src/hd44780.c **** 	unsigned long int_part = (unsigned long) number;
 1201              		.loc 1 361 0
 1202 0052 FFF7FEFF 		bl	__aeabi_d2uiz
 1203              	.LVL144:
 1204 0056 0446     		mov	r4, r0
 1205              	.LVL145:
 362:Src/hd44780.c **** 	double remainder = number - (double) int_part;
 1206              		.loc 1 362 0
 1207 0058 FFF7FEFF 		bl	__aeabi_ui2d
 1208              	.LVL146:
 1209 005c 0246     		mov	r2, r0
 1210 005e 0B46     		mov	r3, r1
 1211 0060 3046     		mov	r0, r6
 1212 0062 3946     		mov	r1, r7
 1213 0064 FFF7FEFF 		bl	__aeabi_dsub
 1214              	.LVL147:
 1215 0068 0646     		mov	r6, r0
 1216              	.LVL148:
 1217 006a 0F46     		mov	r7, r1
 1218              	.LVL149:
 363:Src/hd44780.c **** 	LCD_WriteNumber(handle,int_part,10);
 1219              		.loc 1 363 0
 1220 006c 0A22     		movs	r2, #10
 1221 006e 2146     		mov	r1, r4
 1222 0070 4046     		mov	r0, r8
 1223 0072 FFF7FEFF 		bl	LCD_WriteNumber
 1224              	.LVL150:
 364:Src/hd44780.c **** 
 365:Src/hd44780.c **** 	// Print the decimal point, but only if there are digits beyond
 366:Src/hd44780.c **** 	if (digits > 0) {
 1225              		.loc 1 366 0
ARM GAS  /tmp/ccXPekIA.s 			page 29


 1226 0076 05B3     		cbz	r5, .L90
 367:Src/hd44780.c **** 		LCD_WriteString(handle,".");
 1227              		.loc 1 367 0
 1228 0078 1649     		ldr	r1, .L95+12
 1229 007a 4046     		mov	r0, r8
 1230 007c FFF7FEFF 		bl	LCD_WriteString
 1231              	.LVL151:
 1232 0080 1BE0     		b	.L90
 1233              	.LVL152:
 1234              	.L91:
 1235              	.LBB7:
 368:Src/hd44780.c **** 	}
 369:Src/hd44780.c **** 
 370:Src/hd44780.c **** 	// Extract digits from the remainder one at a time
 371:Src/hd44780.c **** 	while (digits-- > 0) {
 372:Src/hd44780.c **** 		remainder *= 10.0;
 1236              		.loc 1 372 0
 1237 0082 0022     		movs	r2, #0
 1238 0084 124B     		ldr	r3, .L95+8
 1239 0086 3046     		mov	r0, r6
 1240 0088 3946     		mov	r1, r7
 1241 008a FFF7FEFF 		bl	__aeabi_dmul
 1242              	.LVL153:
 1243 008e 0646     		mov	r6, r0
 1244              	.LVL154:
 1245 0090 0F46     		mov	r7, r1
 1246              	.LVL155:
 373:Src/hd44780.c **** 		int toPrint = (int)(remainder);
 1247              		.loc 1 373 0
 1248 0092 FFF7FEFF 		bl	__aeabi_d2iz
 1249              	.LVL156:
 1250 0096 0546     		mov	r5, r0
 1251              	.LVL157:
 374:Src/hd44780.c **** 		LCD_WriteNumber(handle,toPrint,10);
 1252              		.loc 1 374 0
 1253 0098 0A22     		movs	r2, #10
 1254 009a 0146     		mov	r1, r0
 1255 009c 4046     		mov	r0, r8
 1256              	.LVL158:
 1257 009e FFF7FEFF 		bl	LCD_WriteNumber
 1258              	.LVL159:
 375:Src/hd44780.c **** 		remainder -= toPrint;
 1259              		.loc 1 375 0
 1260 00a2 2846     		mov	r0, r5
 1261 00a4 FFF7FEFF 		bl	__aeabi_i2d
 1262              	.LVL160:
 1263 00a8 0246     		mov	r2, r0
 1264 00aa 0B46     		mov	r3, r1
 1265 00ac 3046     		mov	r0, r6
 1266 00ae 3946     		mov	r1, r7
 1267 00b0 FFF7FEFF 		bl	__aeabi_dsub
 1268              	.LVL161:
 1269 00b4 0646     		mov	r6, r0
 1270              	.LVL162:
 1271 00b6 0F46     		mov	r7, r1
 1272              	.LVL163:
 1273              	.LBE7:
ARM GAS  /tmp/ccXPekIA.s 			page 30


 371:Src/hd44780.c **** 		remainder *= 10.0;
 1274              		.loc 1 371 0
 1275 00b8 2546     		mov	r5, r4
 1276              	.LVL164:
 1277              	.L90:
 1278 00ba 6B1E     		subs	r3, r5, #1
 1279 00bc DCB2     		uxtb	r4, r3
 1280              	.LVL165:
 1281 00be 002D     		cmp	r5, #0
 1282 00c0 DFD1     		bne	.L91
 376:Src/hd44780.c **** 	}
 377:Src/hd44780.c **** 	return LCD_OK;
 378:Src/hd44780.c **** }
 1283              		.loc 1 378 0
 1284 00c2 0020     		movs	r0, #0
 1285 00c4 BDE8F081 		pop	{r4, r5, r6, r7, r8, pc}
 1286              	.LVL166:
 1287              	.L96:
 1288              		.align	2
 1289              	.L95:
 1290 00c8 0000E03F 		.word	1071644672
 1291 00cc 00000000 		.word	.LC0
 1292 00d0 00002440 		.word	1076101120
 1293 00d4 04000000 		.word	.LC1
 1294              		.cfi_endproc
 1295              	.LFE83:
 1297              		.section	.text.LCD_EntryModeSet,"ax",%progbits
 1298              		.align	1
 1299              		.global	LCD_EntryModeSet
 1300              		.syntax unified
 1301              		.thumb
 1302              		.thumb_func
 1303              		.fpu softvfp
 1305              	LCD_EntryModeSet:
 1306              	.LFB84:
 379:Src/hd44780.c **** 
 380:Src/hd44780.c **** LCD_RESULT LCD_EntryModeSet(LCD_PCF8574_HandleTypeDef* handle,
 381:Src/hd44780.c **** 		LCD_DIRECTION_INC_DEC direction, LCD_SHIFT shift) {
 1307              		.loc 1 381 0
 1308              		.cfi_startproc
 1309              		@ args = 0, pretend = 0, frame = 0
 1310              		@ frame_needed = 0, uses_anonymous_args = 0
 1311              	.LVL167:
 1312 0000 08B5     		push	{r3, lr}
 1313              	.LCFI24:
 1314              		.cfi_def_cfa_offset 8
 1315              		.cfi_offset 3, -8
 1316              		.cfi_offset 14, -4
 1317              	.LVL168:
 382:Src/hd44780.c **** 
 383:Src/hd44780.c **** 	uint8_t cmd = 0;
 384:Src/hd44780.c **** 	cmd |= 1 << 2;
 385:Src/hd44780.c **** 	cmd |= direction << 1;
 1318              		.loc 1 385 0
 1319 0002 4900     		lsls	r1, r1, #1
 1320              	.LVL169:
 1321 0004 41F00401 		orr	r1, r1, #4
ARM GAS  /tmp/ccXPekIA.s 			page 31


 1322 0008 C9B2     		uxtb	r1, r1
 1323              	.LVL170:
 386:Src/hd44780.c **** 	cmd |= shift;
 387:Src/hd44780.c **** 
 388:Src/hd44780.c **** 	return LCD_WriteCMD(handle, cmd);
 1324              		.loc 1 388 0
 1325 000a 1143     		orrs	r1, r1, r2
 1326              	.LVL171:
 1327 000c FFF7FEFF 		bl	LCD_WriteCMD
 1328              	.LVL172:
 389:Src/hd44780.c **** 
 390:Src/hd44780.c **** }
 1329              		.loc 1 390 0
 1330 0010 08BD     		pop	{r3, pc}
 1331              		.cfi_endproc
 1332              	.LFE84:
 1334              		.section	.text.LCD_Init,"ax",%progbits
 1335              		.align	1
 1336              		.global	LCD_Init
 1337              		.syntax unified
 1338              		.thumb
 1339              		.thumb_func
 1340              		.fpu softvfp
 1342              	LCD_Init:
 1343              	.LFB68:
  50:Src/hd44780.c **** 	handle->D = 1;
 1344              		.loc 1 50 0
 1345              		.cfi_startproc
 1346              		@ args = 0, pretend = 0, frame = 0
 1347              		@ frame_needed = 0, uses_anonymous_args = 0
 1348              	.LVL173:
  51:Src/hd44780.c **** 	handle->B = 0;
 1349              		.loc 1 51 0
 1350 0000 0123     		movs	r3, #1
 1351 0002 4370     		strb	r3, [r0, #1]
  52:Src/hd44780.c **** 	handle->C = 0;
 1352              		.loc 1 52 0
 1353 0004 0023     		movs	r3, #0
 1354 0006 C370     		strb	r3, [r0, #3]
  53:Src/hd44780.c **** 	if (handle->type == TYPE0) {
 1355              		.loc 1 53 0
 1356 0008 8370     		strb	r3, [r0, #2]
  54:Src/hd44780.c **** 		handle->pins = PCF8574_Type0Pins;
 1357              		.loc 1 54 0
 1358 000a 90F83C30 		ldrb	r3, [r0, #60]	@ zero_extendqisi2
 1359 000e 0BB1     		cbz	r3, .L107
  58:Src/hd44780.c **** 	}
 1360              		.loc 1 58 0
 1361 0010 0120     		movs	r0, #1
 1362              	.LVL174:
 1363 0012 7047     		bx	lr
 1364              	.LVL175:
 1365              	.L107:
  50:Src/hd44780.c **** 	handle->D = 1;
 1366              		.loc 1 50 0
 1367 0014 10B5     		push	{r4, lr}
 1368              	.LCFI25:
ARM GAS  /tmp/ccXPekIA.s 			page 32


 1369              		.cfi_def_cfa_offset 8
 1370              		.cfi_offset 4, -8
 1371              		.cfi_offset 14, -4
 1372 0016 0446     		mov	r4, r0
  55:Src/hd44780.c **** 	} else {
 1373              		.loc 1 55 0
 1374 0018 454B     		ldr	r3, .L109
 1375 001a 8363     		str	r3, [r0, #56]
  60:Src/hd44780.c **** 		//handle->errorCallback(LCD_ERROR);
 1376              		.loc 1 60 0
 1377 001c 4030     		adds	r0, r0, #64
 1378              	.LVL176:
 1379 001e FFF7FEFF 		bl	PCF8574_Init
 1380              	.LVL177:
 1381 0022 08B1     		cbz	r0, .L108
  62:Src/hd44780.c **** 	}
 1382              		.loc 1 62 0
 1383 0024 0120     		movs	r0, #1
 121:Src/hd44780.c **** 
 1384              		.loc 1 121 0
 1385 0026 10BD     		pop	{r4, pc}
 1386              	.LVL178:
 1387              	.L108:
  66:Src/hd44780.c **** 	LCD_StateWriteBit(handle, 0, LCD_PIN_RW);
 1388              		.loc 1 66 0
 1389 0028 0422     		movs	r2, #4
 1390 002a 0021     		movs	r1, #0
 1391 002c 2046     		mov	r0, r4
 1392 002e FFF7FEFF 		bl	LCD_StateWriteBit
 1393              	.LVL179:
  67:Src/hd44780.c **** 	LCD_StateWriteBit(handle, 0, LCD_PIN_E);
 1394              		.loc 1 67 0
 1395 0032 0522     		movs	r2, #5
 1396 0034 0021     		movs	r1, #0
 1397 0036 2046     		mov	r0, r4
 1398 0038 FFF7FEFF 		bl	LCD_StateWriteBit
 1399              	.LVL180:
  68:Src/hd44780.c **** 
 1400              		.loc 1 68 0
 1401 003c 0622     		movs	r2, #6
 1402 003e 0021     		movs	r1, #0
 1403 0040 2046     		mov	r0, r4
 1404 0042 FFF7FEFF 		bl	LCD_StateWriteBit
 1405              	.LVL181:
  70:Src/hd44780.c **** 
 1406              		.loc 1 70 0
 1407 0046 0321     		movs	r1, #3
 1408 0048 2046     		mov	r0, r4
 1409 004a FFF7FEFF 		bl	LCD_WriteToDataBus
 1410              	.LVL182:
  72:Src/hd44780.c **** 	HAL_Delay(1);
 1411              		.loc 1 72 0
 1412 004e 0622     		movs	r2, #6
 1413 0050 0121     		movs	r1, #1
 1414 0052 2046     		mov	r0, r4
 1415 0054 FFF7FEFF 		bl	LCD_StateWriteBit
 1416              	.LVL183:
ARM GAS  /tmp/ccXPekIA.s 			page 33


  73:Src/hd44780.c **** 	LCD_StateWriteBit(handle, 0, LCD_PIN_E);
 1417              		.loc 1 73 0
 1418 0058 0120     		movs	r0, #1
 1419 005a FFF7FEFF 		bl	HAL_Delay
 1420              	.LVL184:
  74:Src/hd44780.c **** 	HAL_Delay(5);
 1421              		.loc 1 74 0
 1422 005e 0622     		movs	r2, #6
 1423 0060 0021     		movs	r1, #0
 1424 0062 2046     		mov	r0, r4
 1425 0064 FFF7FEFF 		bl	LCD_StateWriteBit
 1426              	.LVL185:
  75:Src/hd44780.c **** 
 1427              		.loc 1 75 0
 1428 0068 0520     		movs	r0, #5
 1429 006a FFF7FEFF 		bl	HAL_Delay
 1430              	.LVL186:
  77:Src/hd44780.c **** 
 1431              		.loc 1 77 0
 1432 006e 0321     		movs	r1, #3
 1433 0070 2046     		mov	r0, r4
 1434 0072 FFF7FEFF 		bl	LCD_WriteToDataBus
 1435              	.LVL187:
  79:Src/hd44780.c **** 	HAL_Delay(1);
 1436              		.loc 1 79 0
 1437 0076 0622     		movs	r2, #6
 1438 0078 0121     		movs	r1, #1
 1439 007a 2046     		mov	r0, r4
 1440 007c FFF7FEFF 		bl	LCD_StateWriteBit
 1441              	.LVL188:
  80:Src/hd44780.c **** 	LCD_StateWriteBit(handle, 0, LCD_PIN_E);
 1442              		.loc 1 80 0
 1443 0080 0120     		movs	r0, #1
 1444 0082 FFF7FEFF 		bl	HAL_Delay
 1445              	.LVL189:
  81:Src/hd44780.c **** 	HAL_Delay(1);
 1446              		.loc 1 81 0
 1447 0086 0622     		movs	r2, #6
 1448 0088 0021     		movs	r1, #0
 1449 008a 2046     		mov	r0, r4
 1450 008c FFF7FEFF 		bl	LCD_StateWriteBit
 1451              	.LVL190:
  82:Src/hd44780.c **** 
 1452              		.loc 1 82 0
 1453 0090 0120     		movs	r0, #1
 1454 0092 FFF7FEFF 		bl	HAL_Delay
 1455              	.LVL191:
  84:Src/hd44780.c **** 
 1456              		.loc 1 84 0
 1457 0096 0321     		movs	r1, #3
 1458 0098 2046     		mov	r0, r4
 1459 009a FFF7FEFF 		bl	LCD_WriteToDataBus
 1460              	.LVL192:
  86:Src/hd44780.c **** 	HAL_Delay(1);
 1461              		.loc 1 86 0
 1462 009e 0622     		movs	r2, #6
 1463 00a0 0121     		movs	r1, #1
ARM GAS  /tmp/ccXPekIA.s 			page 34


 1464 00a2 2046     		mov	r0, r4
 1465 00a4 FFF7FEFF 		bl	LCD_StateWriteBit
 1466              	.LVL193:
  87:Src/hd44780.c **** 	LCD_StateWriteBit(handle, 0, LCD_PIN_E);
 1467              		.loc 1 87 0
 1468 00a8 0120     		movs	r0, #1
 1469 00aa FFF7FEFF 		bl	HAL_Delay
 1470              	.LVL194:
  88:Src/hd44780.c **** 	HAL_Delay(1);
 1471              		.loc 1 88 0
 1472 00ae 0622     		movs	r2, #6
 1473 00b0 0021     		movs	r1, #0
 1474 00b2 2046     		mov	r0, r4
 1475 00b4 FFF7FEFF 		bl	LCD_StateWriteBit
 1476              	.LVL195:
  89:Src/hd44780.c **** 
 1477              		.loc 1 89 0
 1478 00b8 0120     		movs	r0, #1
 1479 00ba FFF7FEFF 		bl	HAL_Delay
 1480              	.LVL196:
  91:Src/hd44780.c **** 
 1481              		.loc 1 91 0
 1482 00be 0221     		movs	r1, #2
 1483 00c0 2046     		mov	r0, r4
 1484 00c2 FFF7FEFF 		bl	LCD_WriteToDataBus
 1485              	.LVL197:
  93:Src/hd44780.c **** 	HAL_Delay(1);
 1486              		.loc 1 93 0
 1487 00c6 0622     		movs	r2, #6
 1488 00c8 0121     		movs	r1, #1
 1489 00ca 2046     		mov	r0, r4
 1490 00cc FFF7FEFF 		bl	LCD_StateWriteBit
 1491              	.LVL198:
  94:Src/hd44780.c **** 	LCD_StateWriteBit(handle, 0, LCD_PIN_E);
 1492              		.loc 1 94 0
 1493 00d0 0120     		movs	r0, #1
 1494 00d2 FFF7FEFF 		bl	HAL_Delay
 1495              	.LVL199:
  95:Src/hd44780.c **** 	HAL_Delay(1);
 1496              		.loc 1 95 0
 1497 00d6 0622     		movs	r2, #6
 1498 00d8 0021     		movs	r1, #0
 1499 00da 2046     		mov	r0, r4
 1500 00dc FFF7FEFF 		bl	LCD_StateWriteBit
 1501              	.LVL200:
  96:Src/hd44780.c **** 
 1502              		.loc 1 96 0
 1503 00e0 0120     		movs	r0, #1
 1504 00e2 FFF7FEFF 		bl	HAL_Delay
 1505              	.LVL201:
  99:Src/hd44780.c **** 	cmd = cmd | (1 << 5);
 1506              		.loc 1 99 0
 1507 00e6 2178     		ldrb	r1, [r4]	@ zero_extendqisi2
 1508 00e8 C900     		lsls	r1, r1, #3
 1509 00ea C9B2     		uxtb	r1, r1
 1510              	.LVL202:
 102:Src/hd44780.c **** 
ARM GAS  /tmp/ccXPekIA.s 			page 35


 1511              		.loc 1 102 0
 1512 00ec 41F02001 		orr	r1, r1, #32
 1513              	.LVL203:
 1514 00f0 2046     		mov	r0, r4
 1515 00f2 FFF7FEFF 		bl	LCD_WriteCMD
 1516              	.LVL204:
 106:Src/hd44780.c **** 	cmd = cmd | handle->B;
 1517              		.loc 1 106 0
 1518 00f6 A378     		ldrb	r3, [r4, #2]	@ zero_extendqisi2
 1519 00f8 5B00     		lsls	r3, r3, #1
 1520 00fa 43F00803 		orr	r3, r3, #8
 1521 00fe 03F0FE03 		and	r3, r3, #254
 1522              	.LVL205:
 107:Src/hd44780.c **** 
 1523              		.loc 1 107 0
 1524 0102 E178     		ldrb	r1, [r4, #3]	@ zero_extendqisi2
 1525              	.LVL206:
 109:Src/hd44780.c **** 
 1526              		.loc 1 109 0
 1527 0104 1943     		orrs	r1, r1, r3
 1528              	.LVL207:
 1529 0106 2046     		mov	r0, r4
 1530 0108 FFF7FEFF 		bl	LCD_WriteCMD
 1531              	.LVL208:
 111:Src/hd44780.c **** 
 1532              		.loc 1 111 0
 1533 010c 2046     		mov	r0, r4
 1534 010e FFF7FEFF 		bl	LCD_ClearDisplay
 1535              	.LVL209:
 113:Src/hd44780.c **** 
 1536              		.loc 1 113 0
 1537 0112 0022     		movs	r2, #0
 1538 0114 0121     		movs	r1, #1
 1539 0116 2046     		mov	r0, r4
 1540 0118 FFF7FEFF 		bl	LCD_EntryModeSet
 1541              	.LVL210:
 115:Src/hd44780.c **** 
 1542              		.loc 1 115 0
 1543 011c 2046     		mov	r0, r4
 1544 011e FFF7FEFF 		bl	LCD_DisplayON
 1545              	.LVL211:
 117:Src/hd44780.c **** 
 1546              		.loc 1 117 0
 1547 0122 0121     		movs	r1, #1
 1548 0124 2046     		mov	r0, r4
 1549 0126 FFF7FEFF 		bl	LCD_StateLEDControl
 1550              	.LVL212:
 119:Src/hd44780.c **** 
 1551              		.loc 1 119 0
 1552 012a 0020     		movs	r0, #0
 1553 012c 10BD     		pop	{r4, pc}
 1554              	.LVL213:
 1555              	.L110:
 1556 012e 00BF     		.align	2
 1557              	.L109:
 1558 0130 00000000 		.word	.LANCHOR1
 1559              		.cfi_endproc
ARM GAS  /tmp/ccXPekIA.s 			page 36


 1560              	.LFE68:
 1562              		.section	.text.LCD_CustomChar,"ax",%progbits
 1563              		.align	1
 1564              		.global	LCD_CustomChar
 1565              		.syntax unified
 1566              		.thumb
 1567              		.thumb_func
 1568              		.fpu softvfp
 1570              	LCD_CustomChar:
 1571              	.LFB85:
 391:Src/hd44780.c **** 
 392:Src/hd44780.c **** LCD_RESULT LCD_CustomChar(LCD_PCF8574_HandleTypeDef* handle, uint8_t *pattern,
 393:Src/hd44780.c **** 		uint8_t address) {
 1572              		.loc 1 393 0
 1573              		.cfi_startproc
 1574              		@ args = 0, pretend = 0, frame = 0
 1575              		@ frame_needed = 0, uses_anonymous_args = 0
 1576              	.LVL214:
 1577 0000 70B5     		push	{r4, r5, r6, lr}
 1578              	.LCFI26:
 1579              		.cfi_def_cfa_offset 16
 1580              		.cfi_offset 4, -16
 1581              		.cfi_offset 5, -12
 1582              		.cfi_offset 6, -8
 1583              		.cfi_offset 14, -4
 1584 0002 0646     		mov	r6, r0
 1585 0004 0D46     		mov	r5, r1
 1586              	.LVL215:
 394:Src/hd44780.c **** 	uint8_t a = 0;
 395:Src/hd44780.c **** 	int i = 0;
 396:Src/hd44780.c **** 	a = 8 * address;
 1587              		.loc 1 396 0
 1588 0006 D200     		lsls	r2, r2, #3
 1589              	.LVL216:
 1590 0008 D1B2     		uxtb	r1, r2
 1591              	.LVL217:
 397:Src/hd44780.c **** 	LCD_WriteCMD(handle, a | 0x40);
 1592              		.loc 1 397 0
 1593 000a 41F04001 		orr	r1, r1, #64
 1594              	.LVL218:
 1595 000e FFF7FEFF 		bl	LCD_WriteCMD
 1596              	.LVL219:
 398:Src/hd44780.c **** 	for (i = 0; i < 8; i++) {
 1597              		.loc 1 398 0
 1598 0012 0024     		movs	r4, #0
 1599 0014 04E0     		b	.L112
 1600              	.LVL220:
 1601              	.L113:
 399:Src/hd44780.c **** 		LCD_WriteDATA(handle, pattern[i]);
 1602              		.loc 1 399 0 discriminator 3
 1603 0016 295D     		ldrb	r1, [r5, r4]	@ zero_extendqisi2
 1604 0018 3046     		mov	r0, r6
 1605 001a FFF7FEFF 		bl	LCD_WriteDATA
 1606              	.LVL221:
 398:Src/hd44780.c **** 	for (i = 0; i < 8; i++) {
 1607              		.loc 1 398 0 discriminator 3
 1608 001e 0134     		adds	r4, r4, #1
ARM GAS  /tmp/ccXPekIA.s 			page 37


 1609              	.LVL222:
 1610              	.L112:
 398:Src/hd44780.c **** 	for (i = 0; i < 8; i++) {
 1611              		.loc 1 398 0 is_stmt 0 discriminator 1
 1612 0020 072C     		cmp	r4, #7
 1613 0022 F8DD     		ble	.L113
 400:Src/hd44780.c **** 	}
 401:Src/hd44780.c **** 	return LCD_OK;
 402:Src/hd44780.c **** }
 1614              		.loc 1 402 0 is_stmt 1
 1615 0024 0020     		movs	r0, #0
 1616 0026 70BD     		pop	{r4, r5, r6, pc}
 1617              		.cfi_endproc
 1618              	.LFE85:
 1620              		.global	LCDerrorFlag
 1621              		.global	PCF8574_Type0Pins
 1622              		.section	.bss.LCDerrorFlag,"aw",%nobits
 1623              		.set	.LANCHOR0,. + 0
 1626              	LCDerrorFlag:
 1627 0000 00       		.space	1
 1628              		.section	.data.PCF8574_Type0Pins,"aw",%progbits
 1629              		.align	2
 1630              		.set	.LANCHOR1,. + 0
 1633              	PCF8574_Type0Pins:
 1634 0000 04000000 		.word	4
 1635 0004 05000000 		.word	5
 1636 0008 06000000 		.word	6
 1637 000c 07000000 		.word	7
 1638 0010 00000000 		.word	0
 1639 0014 01000000 		.word	1
 1640 0018 02000000 		.word	2
 1641 001c 03000000 		.word	3
 1642              		.section	.rodata.LCD_WriteFloat.str1.4,"aMS",%progbits,1
 1643              		.align	2
 1644              	.LC0:
 1645 0000 2D00     		.ascii	"-\000"
 1646 0002 0000     		.space	2
 1647              	.LC1:
 1648 0004 2E00     		.ascii	".\000"
 1649              		.text
 1650              	.Letext0:
 1651              		.file 2 "/usr/include/newlib/machine/_default_types.h"
 1652              		.file 3 "/usr/include/newlib/sys/lock.h"
 1653              		.file 4 "/usr/include/newlib/sys/_types.h"
 1654              		.file 5 "/usr/lib/gcc/arm-none-eabi/6.3.1/include/stddef.h"
 1655              		.file 6 "/usr/include/newlib/sys/reent.h"
 1656              		.file 7 "/usr/include/newlib/sys/_stdint.h"
 1657              		.file 8 "Drivers/CMSIS/Include/core_cm3.h"
 1658              		.file 9 "Drivers/CMSIS/Device/ST/STM32F1xx/Include/system_stm32f1xx.h"
 1659              		.file 10 "Drivers/CMSIS/Device/ST/STM32F1xx/Include/stm32f103xe.h"
 1660              		.file 11 "Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_hal_def.h"
 1661              		.file 12 "Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_hal_dma.h"
 1662              		.file 13 "Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_hal_i2c.h"
 1663              		.file 14 "Inc/pcf8574.h"
 1664              		.file 15 "Inc/hd44780.h"
 1665              		.file 16 "Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_hal.h"
ARM GAS  /tmp/ccXPekIA.s 			page 38


DEFINED SYMBOLS
                            *ABS*:0000000000000000 hd44780.c
     /tmp/ccXPekIA.s:16     .text.LCD_I2C_WriteOut:0000000000000000 $t
     /tmp/ccXPekIA.s:23     .text.LCD_I2C_WriteOut:0000000000000000 LCD_I2C_WriteOut
     /tmp/ccXPekIA.s:67     .text.LCD_I2C_WriteOut:0000000000000024 $d
     /tmp/ccXPekIA.s:72     .text.LCD_StateWriteBit:0000000000000000 $t
     /tmp/ccXPekIA.s:79     .text.LCD_StateWriteBit:0000000000000000 LCD_StateWriteBit
     /tmp/ccXPekIA.s:124    .text.LCD_StateLEDControl:0000000000000000 $t
     /tmp/ccXPekIA.s:131    .text.LCD_StateLEDControl:0000000000000000 LCD_StateLEDControl
     /tmp/ccXPekIA.s:155    .text.LCD_WriteToDataBus:0000000000000000 $t
     /tmp/ccXPekIA.s:162    .text.LCD_WriteToDataBus:0000000000000000 LCD_WriteToDataBus
     /tmp/ccXPekIA.s:272    .text.LCD_GetBusyFlag:0000000000000000 $t
     /tmp/ccXPekIA.s:279    .text.LCD_GetBusyFlag:0000000000000000 LCD_GetBusyFlag
     /tmp/ccXPekIA.s:347    .text.LCD_WaitForBusyFlag:0000000000000000 $t
     /tmp/ccXPekIA.s:354    .text.LCD_WaitForBusyFlag:0000000000000000 LCD_WaitForBusyFlag
     /tmp/ccXPekIA.s:382    .text.LCD_WriteCMD:0000000000000000 $t
     /tmp/ccXPekIA.s:389    .text.LCD_WriteCMD:0000000000000000 LCD_WriteCMD
     /tmp/ccXPekIA.s:473    .text.LCD_WriteCMD:0000000000000064 $d
     /tmp/ccXPekIA.s:478    .text.LCD_WriteDATA:0000000000000000 $t
     /tmp/ccXPekIA.s:485    .text.LCD_WriteDATA:0000000000000000 LCD_WriteDATA
     /tmp/ccXPekIA.s:558    .text.LCD_SetLocation:0000000000000000 $t
     /tmp/ccXPekIA.s:565    .text.LCD_SetLocation:0000000000000000 LCD_SetLocation
     /tmp/ccXPekIA.s:596    .text.LCD_WriteString:0000000000000000 $t
     /tmp/ccXPekIA.s:603    .text.LCD_WriteString:0000000000000000 LCD_WriteString
     /tmp/ccXPekIA.s:665    .text.LCD_ClearDisplay:0000000000000000 $t
     /tmp/ccXPekIA.s:672    .text.LCD_ClearDisplay:0000000000000000 LCD_ClearDisplay
     /tmp/ccXPekIA.s:694    .text.LCD_DisplayON:0000000000000000 $t
     /tmp/ccXPekIA.s:701    .text.LCD_DisplayON:0000000000000000 LCD_DisplayON
     /tmp/ccXPekIA.s:737    .text.LCD_DisplayOFF:0000000000000000 $t
     /tmp/ccXPekIA.s:744    .text.LCD_DisplayOFF:0000000000000000 LCD_DisplayOFF
     /tmp/ccXPekIA.s:780    .text.LCD_CursorON:0000000000000000 $t
     /tmp/ccXPekIA.s:787    .text.LCD_CursorON:0000000000000000 LCD_CursorON
     /tmp/ccXPekIA.s:830    .text.LCD_CursorOFF:0000000000000000 $t
     /tmp/ccXPekIA.s:837    .text.LCD_CursorOFF:0000000000000000 LCD_CursorOFF
     /tmp/ccXPekIA.s:873    .text.LCD_ShiftCursor:0000000000000000 $t
     /tmp/ccXPekIA.s:880    .text.LCD_ShiftCursor:0000000000000000 LCD_ShiftCursor
     /tmp/ccXPekIA.s:937    .text.LCD_ShiftDisplay:0000000000000000 $t
     /tmp/ccXPekIA.s:944    .text.LCD_ShiftDisplay:0000000000000000 LCD_ShiftDisplay
     /tmp/ccXPekIA.s:1001   .text.LCD_WriteNumber:0000000000000000 $t
     /tmp/ccXPekIA.s:1008   .text.LCD_WriteNumber:0000000000000000 LCD_WriteNumber
     /tmp/ccXPekIA.s:1110   .text.LCD_WriteFloat:0000000000000000 $t
     /tmp/ccXPekIA.s:1117   .text.LCD_WriteFloat:0000000000000000 LCD_WriteFloat
     /tmp/ccXPekIA.s:1290   .text.LCD_WriteFloat:00000000000000c8 $d
     /tmp/ccXPekIA.s:1298   .text.LCD_EntryModeSet:0000000000000000 $t
     /tmp/ccXPekIA.s:1305   .text.LCD_EntryModeSet:0000000000000000 LCD_EntryModeSet
     /tmp/ccXPekIA.s:1335   .text.LCD_Init:0000000000000000 $t
     /tmp/ccXPekIA.s:1342   .text.LCD_Init:0000000000000000 LCD_Init
     /tmp/ccXPekIA.s:1558   .text.LCD_Init:0000000000000130 $d
     /tmp/ccXPekIA.s:1563   .text.LCD_CustomChar:0000000000000000 $t
     /tmp/ccXPekIA.s:1570   .text.LCD_CustomChar:0000000000000000 LCD_CustomChar
     /tmp/ccXPekIA.s:1626   .bss.LCDerrorFlag:0000000000000000 LCDerrorFlag
     /tmp/ccXPekIA.s:1633   .data.PCF8574_Type0Pins:0000000000000000 PCF8574_Type0Pins
     /tmp/ccXPekIA.s:1627   .bss.LCDerrorFlag:0000000000000000 $d
     /tmp/ccXPekIA.s:1629   .data.PCF8574_Type0Pins:0000000000000000 $d
     /tmp/ccXPekIA.s:1643   .rodata.LCD_WriteFloat.str1.4:0000000000000000 $d
                     .debug_frame:0000000000000010 $d

ARM GAS  /tmp/ccXPekIA.s 			page 39


UNDEFINED SYMBOLS
PCF8574_Write
__aeabi_dcmplt
__aeabi_ddiv
__aeabi_dadd
__aeabi_d2uiz
__aeabi_ui2d
__aeabi_dsub
__aeabi_dmul
__aeabi_d2iz
__aeabi_i2d
PCF8574_Init
HAL_Delay
